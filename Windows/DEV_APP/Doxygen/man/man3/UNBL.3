.TH "UNBL" 3 "Wed Mar 7 2018" "C++ Software Transactional memory" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UNBL \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <UNBL\&.h>\fP
.PP
Inherits \fBBANK\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUNBL\fP ()"
.br
.ti -1c
.RI "\fBUNBL\fP (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)"
.br
.ti -1c
.RI "\fBUNBL\fP (std::shared_ptr< \fBBANK\fP > obj, int _version, int _unique_id)"
.br
.ti -1c
.RI "\fBUNBL\fP (const \fBUNBL\fP &orig)"
.br
.ti -1c
.RI "\fBUNBL\fP \fBoperator=\fP (const \fBUNBL\fP &orig)"
.br
.ti -1c
.RI "virtual \fB~UNBL\fP ()"
.br
.ti -1c
.RI "virtual void \fBcopy\fP (std::shared_ptr< OSTM > to, std::shared_ptr< OSTM > from)"
.br
.RI "\fIcopy function, make deep copy of the object/pointer \fP"
.ti -1c
.RI "virtual std::shared_ptr< OSTM > \fBgetBaseCopy\fP (std::shared_ptr< OSTM > object)"
.br
.RI "\fIgetBaseCopy function, make deep copy of the object/pointer and Return a new std::shared_ptr<BANK> type object \fP"
.ti -1c
.RI "virtual void \fBtoString\fP ()"
.br
.RI "\fI_cast, is use to cast bak the std::shared_ptr<OSTM> to the required type \fP"
.ti -1c
.RI "virtual void \fBSetAddress\fP (std::string address)"
.br
.ti -1c
.RI "virtual std::string \fBGetAddress\fP () const "
.br
.ti -1c
.RI "virtual void \fBSetBalance\fP (double balance)"
.br
.ti -1c
.RI "virtual double \fBGetBalance\fP () const "
.br
.ti -1c
.RI "virtual void \fBSetAccountNumber\fP (int accountNumber)"
.br
.ti -1c
.RI "virtual int \fBGetAccountNumber\fP () const "
.br
.ti -1c
.RI "virtual void \fBSetLastName\fP (std::string lastName)"
.br
.ti -1c
.RI "virtual std::string \fBGetLastName\fP () const "
.br
.ti -1c
.RI "virtual void \fBSetFirstName\fP (std::string firstName)"
.br
.ti -1c
.RI "virtual std::string \fBGetFirstName\fP () const "
.br
.ti -1c
.RI "virtual void \fBSetFullname\fP (std::string fullname)"
.br
.ti -1c
.RI "virtual std::string \fBGetFullname\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 
Inherit from \fBBANK\fP 
.PP
Definition at line 19 of file UNBL\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "UNBL::UNBL ()\fC [inline]\fP"
Constructor 
.PP
Definition at line 24 of file UNBL\&.h\&.
.PP
Referenced by getBaseCopy(), and UNBL()\&.
.PP
.nf
24            : BANK() {
25         this->accountNumber = 0;
26         this->balance = 50;
27         this->firstName = "Joe";
28         this->lastName = "Blog";
29         this->address = "High street, Carlow";
30         this->fullname = firstName + " " + lastName;
31     };
.fi
.SS "UNBL::UNBL (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)\fC [inline]\fP"
Custom constructor 
.PP
Definition at line 35 of file UNBL\&.h\&.
.PP
.nf
35                                                                                                         : BANK() {
36         this->accountNumber = accountNumber;
37         this->balance = balance;
38         this->firstName = firstName;
39         this->lastName = lastName;
40         this->address = address;
41         this->fullname = firstName + " " + lastName;
42     };
.fi
.SS "UNBL::UNBL (std::shared_ptr< \fBBANK\fP > obj, int _version, int _unique_id)\fC [inline]\fP"
Custom constructor, used by the library for deep copying 
.PP
Definition at line 46 of file UNBL\&.h\&.
.PP
References UNBL()\&.
.PP
.nf
46                                                                 : BANK(_version, _unique_id) {
47  
48         this->accountNumber = obj->GetAccountNumber();
49         this->balance = obj->GetBalance();
50         this->firstName = obj->GetFirstName();
51         this->lastName = obj->GetLastName();
52         this->address = obj->GetAddress();
53         this->fullname = obj->GetFirstName() + " " + obj->GetLastName();
54     };
.fi
.SS "UNBL::UNBL (const \fBUNBL\fP & orig)"
Copy constructor 
.PP
Definition at line 11 of file UNBL\&.cpp\&.
.PP
.nf
11                            {
12 }
.fi
.SS "UNBL::~UNBL ()\fC [virtual]\fP"
de-constructor 
.PP
Definition at line 14 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
14             {
15 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void UNBL::copy (std::shared_ptr< OSTM > to, std::shared_ptr< OSTM > from)\fC [virtual]\fP"

.PP
copy function, make deep copy of the object/pointer 
.PP
\fBParameters:\fP
.RS 4
\fIobjTO\fP is a std::shared_ptr<BANK> type object casted back from std::shared_ptr<OSTM> 
.br
\fIobjFROM\fP is a std::shared_ptr<BANK> type object casted back from std::shared_ptr<OSTM> 
.RE
.PP

.PP
Definition at line 33 of file UNBL\&.cpp\&.
.PP
References SetAccountNumber()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
33                                                                {
34 
35     std::shared_ptr<UNBL> objTO = std::dynamic_pointer_cast<UNBL>(to);
36     std::shared_ptr<UNBL> objFROM = std::dynamic_pointer_cast<UNBL>(from);
37     objTO->Set_Unique_ID(objFROM->Get_Unique_ID());
38     objTO->Set_Version(objFROM->Get_Version());
39     objTO->SetAccountNumber(objFROM->GetAccountNumber());
40     objTO->SetBalance(objFROM->GetBalance());
41    
42 }
.fi
.SS "int UNBL::GetAccountNumber () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 78 of file UNBL\&.cpp\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
78                                  {
79     return accountNumber;
80 }
.fi
.SS "std::string UNBL::GetAddress () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 62 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
62                                  {
63     return address;
64 }
.fi
.SS "double UNBL::GetBalance () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 70 of file UNBL\&.cpp\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
70                               {
71     return balance;
72 }
.fi
.SS "std::shared_ptr< OSTM > UNBL::getBaseCopy (std::shared_ptr< OSTM > object)\fC [virtual]\fP"

.PP
getBaseCopy function, make deep copy of the object/pointer and Return a new std::shared_ptr<BANK> type object 
.PP
\fBParameters:\fP
.RS 4
\fIobjTO\fP is a \fBBANK\fP type pointer for casting 
.br
\fIobj\fP is a std::shared_ptr<BANK> return type 
.RE
.PP

.PP
Definition at line 21 of file UNBL\&.cpp\&.
.PP
References UNBL()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
22 {
23     std::shared_ptr<BANK> objTO = std::dynamic_pointer_cast<BANK>(object);
24     std::shared_ptr<BANK> obj(new UNBL(objTO,object->Get_Version(),object->Get_Unique_ID())); 
25     std::shared_ptr<OSTM> ostm_obj = std::dynamic_pointer_cast<OSTM>(obj);                                  
26     return ostm_obj;
27 }
.fi
.SS "std::string UNBL::GetFirstName () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 94 of file UNBL\&.cpp\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
94                                    {
95     return firstName;
96 }
.fi
.SS "std::string UNBL::GetFullname () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 102 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
102                                   {
103     return fullname;
104 }
.fi
.SS "std::string UNBL::GetLastName () const\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 86 of file UNBL\&.cpp\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
86                                   {
87     return lastName;
88 }
.fi
.SS "\fBUNBL\fP UNBL::operator= (const \fBUNBL\fP & orig)\fC [inline]\fP"
Operator 
.PP
Definition at line 62 of file UNBL\&.h\&.
.PP
References copy(), GetAccountNumber(), GetAddress(), GetBalance(), getBaseCopy(), GetFirstName(), GetFullname(), GetLastName(), SetAccountNumber(), SetAddress(), SetBalance(), SetFirstName(), SetFullname(), SetLastName(), toString(), and ~UNBL()\&.
.PP
.nf
62 {};
.fi
.SS "void UNBL::SetAccountNumber (int accountNumber)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 74 of file UNBL\&.cpp\&.
.PP
Referenced by copy(), and operator=()\&.
.PP
.nf
74                                              {
75     this->accountNumber = accountNumber;
76 }
.fi
.SS "void UNBL::SetAddress (std::string address)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 58 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
58                                        {
59     this->address = address;
60 }
.fi
.SS "void UNBL::SetBalance (double balance)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 66 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
66                                     {
67     this->balance = balance;
68 }
.fi
.SS "void UNBL::SetFirstName (std::string firstName)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 90 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
90                                            {
91     this->firstName = firstName;
92 }
.fi
.SS "void UNBL::SetFullname (std::string fullname)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 98 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
98                                          {
99     this->fullname = fullname;
100 }
.fi
.SS "void UNBL::SetLastName (std::string lastName)\fC [virtual]\fP"

.PP
Implements \fBBANK\fP\&.
.PP
Definition at line 82 of file UNBL\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
82                                          {
83     this->lastName = lastName;
84 }
.fi
.SS "void UNBL::toString ()\fC [virtual]\fP"

.PP
_cast, is use to cast bak the std::shared_ptr<OSTM> to the required type toString function, displays the object values in formatted way 
.PP
Definition at line 53 of file UNBL\&.cpp\&.
.PP
References GetAccountNumber(), GetBalance(), GetFirstName(), and GetLastName()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
54 {
55    std::cout << "\nUNBL BANK" << "\nUnique ID : " << this->Get_Unique_ID() << "\nInt account : " << this->GetAccountNumber() << "\nDouble value : " << this->GetBalance() << "\nFirst name: " << this->GetFirstName() << "\nLast name : " << this->GetLastName()  << "\nVersion number : " << this->Get_Version() << std::endl;
56 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for C++ Software Transactional memory from the source code\&.
