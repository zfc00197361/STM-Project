<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes refid="_t_m_8h" local="yes">TM.h</includes>
    <includes refid="_a_i_b_8h" local="yes">AIB.h</includes>
    <includes refid="_b_o_i_8h" local="yes">BOI.h</includes>
    <includes refid="_b_o_a_8h" local="yes">BOA.h</includes>
    <includes refid="_s_w_b_p_l_c_8h" local="yes">SWBPLC.h</includes>
    <includes refid="_u_l_s_t_e_r_8h" local="yes">ULSTER.h</includes>
    <includes refid="_u_n_b_l_8h" local="yes">UNBL.h</includes>
    <includes refid="_w_a_r_e_h_o_u_s_e_8h" local="yes">WAREHOUSE.h</includes>
    <includes refid="_c_a_r_p_h_o_n_e___w_a_r_e_h_o_u_s_e_8h" local="yes">CARPHONE_WAREHOUSE.h</includes>
    <includes refid="_c_a_r_l_o_w___w_8h" local="yes">CARLOW_W.h</includes>
    <includes refid="_k_i_l_k_e_n_n_y___w_8h" local="yes">KILKENNY_W.h</includes>
    <includes refid="_t_a_l_l_a_g_h___w_8h" local="yes">TALLAGH_W.h</includes>
    <includes refid="_d_u_n_d_a_l_k___w_8h" local="yes">DUNDALK_W.h</includes>
    <includes refid="_s_l_i_g_o___w_8h" local="yes">SLIGO_W.h</includes>
    <includes local="no">mutex</includes>
    <includes local="no">memory</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="603">
        <label>TX.h</label>
        <link refid="_t_x_8h"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>SWBPLC.h</label>
        <link refid="_s_w_b_p_l_c_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="612">
        <label>BOA.h</label>
        <link refid="_b_o_a_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="611">
        <label>BOI.h</label>
        <link refid="_b_o_i_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>TM.h</label>
        <link refid="_t_m_8h"/>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
      </node>
      <node id="608">
        <label>string</label>
      </node>
      <node id="617">
        <label>CARPHONE_WAREHOUSE.h</label>
        <link refid="_c_a_r_p_h_o_n_e___w_a_r_e_h_o_u_s_e_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="602">
        <label>map</label>
      </node>
      <node id="607">
        <label>OSTM.h</label>
        <link refid="_o_s_t_m_8h"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="609">
        <label>AIB.h</label>
        <link refid="_a_i_b_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="620">
        <label>TALLAGH_W.h</label>
        <link refid="_t_a_l_l_a_g_h___w_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="622">
        <label>SLIGO_W.h</label>
        <link refid="_s_l_i_g_o___w_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="623">
        <label>condition_variable</label>
      </node>
      <node id="616">
        <label>WAREHOUSE.h</label>
        <link refid="_w_a_r_e_h_o_u_s_e_8h"/>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="615">
        <label>UNBL.h</label>
        <link refid="_u_n_b_l_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="604">
        <label>unistd.h</label>
      </node>
      <node id="624">
        <label>vector</label>
      </node>
      <node id="601">
        <label>utility</label>
      </node>
      <node id="595">
        <label>cstdlib</label>
      </node>
      <node id="596">
        <label>iostream</label>
      </node>
      <node id="618">
        <label>CARLOW_W.h</label>
        <link refid="_c_a_r_l_o_w___w_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="614">
        <label>ULSTER.h</label>
        <link refid="_u_l_s_t_e_r_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="600">
        <label>unordered_map</label>
      </node>
      <node id="599">
        <label>mutex</label>
      </node>
      <node id="621">
        <label>DUNDALK_W.h</label>
        <link refid="_d_u_n_d_a_l_k___w_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>thread</label>
      </node>
      <node id="610">
        <label>BANK.h</label>
        <link refid="_b_a_n_k_8h"/>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="619">
        <label>KILKENNY_W.h</label>
        <link refid="_k_i_l_k_e_n_n_y___w_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>stdio.h</label>
      </node>
      <node id="594">
        <label>main.cpp</label>
        <link refid="main.cpp"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a988177ecdd12249ecd3a1cdc75546c44" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int vector_number</definition>
        <argsstring></argsstring>
        <name>vector_number</name>
        <initializer>= 600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector_number</parametername>
</parameternamelist>
<parameterdescription>
<para>control the size of the vector to store std::shared_ptr&lt;OSTM&gt; pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.cpp" line="43" column="1" bodyfile="main.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a944b67b9489cc68c8eac66d42f4515ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _six_account_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _from_one_, std::shared_ptr&lt; OSTM &gt; _from_two_, std::shared_ptr&lt; OSTM &gt; _from_three_, std::shared_ptr&lt; OSTM &gt; _from_four_, std::shared_ptr&lt; OSTM &gt; _from_five_, TM &amp;_tm, double _amount)</argsstring>
        <name>_six_account_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_one_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_two_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_three_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_four_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_five_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>six_account_transfer</emphasis> function, takes six std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from five account to one account </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;BANK&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO</emphasis> &amp; <emphasis>FROM_ONE</emphasis> &amp; <emphasis>FROM_TWO</emphasis> &amp; <emphasis>FROM_THREE</emphasis> &amp; <emphasis>FROM_FOUR</emphasis> &amp; <emphasis>FROM_FIVE</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, _TO_OSTM &amp; _FROM_ONE_OSTM &amp; _FROM_TWO_OSTM &amp; _FROM_THREE_OSTM &amp; _FROM_FOUR_OSTM &amp; _FROM_FIVE_OSTM </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Required pointers to use in transaction</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="51" column="1" bodyfile="main.cpp" bodystart="51" bodyend="115"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" compoundref="_b_a_n_k_8h" startline="46" endline="46">BANK::SetBalance</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a83aef8c5b69afef4e38d14c17fe782b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _two_account_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _from_, TM &amp;_tm, double _amount)</argsstring>
        <name>_two_account_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>two_account_transfer</emphasis> function, takes two std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;BANK&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_BANK</emphasis> &amp; <emphasis>FROM_BANK</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_OSTM</emphasis> &amp; <emphasis>FROM_OSTM</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>NESTED TRANSACTION</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="123" column="1" bodyfile="main.cpp" bodystart="123" bodyend="197"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" compoundref="_b_a_n_k_8h" startline="46" endline="46">BANK::SetBalance</references>
        <referencedby refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" compoundref="main_8cpp" startline="206" endline="285">_nesting_</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _nesting_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _from_, TM &amp;_tm, double _amount)</argsstring>
        <name>_nesting_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>nesting</emphasis> function, takes two std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account This function create nested transactions inside the transaction, and call other function to nesting the transaction as well </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;BANK&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_BANK</emphasis> &amp; <emphasis>FROM_BANK</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_OSTM</emphasis> &amp; <emphasis>FROM_OSTM</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>NESTED TRANSACTION</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>NESTED TRANSACTION IN THE NESTED TRANSACTION <emphasis>two_account_transfer</emphasis> function call</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="206" column="1" bodyfile="main.cpp" bodystart="206" bodyend="285"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" compoundref="_b_a_n_k_8h" startline="46" endline="46">BANK::SetBalance</references>
        <references refid="main_8cpp_1a83aef8c5b69afef4e38d14c17fe782b3" compoundref="main_8cpp" startline="123" endline="197">_two_account_transfer_</references>
        <referencedby refid="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="main_8cpp" startline="649" endline="1024">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a0099d241c74532abfb1baae50a52da52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _complex_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _from_, std::shared_ptr&lt; OSTM &gt; _from_two_, std::vector&lt; std::shared_ptr&lt; OSTM &gt;&gt; _customer_vec, TM &amp;_tm, double _amount)</argsstring>
        <name>_complex_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_two_</declname>
        </param>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;&gt;</type>
          <declname>_customer_vec</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>complex_transfer</emphasis> function, takes two std::shared_ptr&lt;OSTM&gt; pointer, a vector of std::shared_ptr&lt;OSTM&gt; pointers, the Transaction manager, and the amount to use in the transaction, and transfer the _amount value from booth single objects to the objects to the vector collection </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;BANK&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>FROM</emphasis> &amp; <emphasis>FROM_TWO</emphasis> &amp; <emphasis>TO</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>FROM_OSTM_ONE</emphasis> &amp; <emphasis>FROM_OSTM_TWO</emphasis> &amp; <emphasis>TO_OSTM</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>Register customers accounts from the collection (vector)</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="294" column="1" bodyfile="main.cpp" bodystart="294" bodyend="350"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" compoundref="_b_a_n_k_8h" startline="46" endline="46">BANK::SetBalance</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _warehouse_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _from_, TM &amp;_tm, double _amount)</argsstring>
        <name>_warehouse_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>warehouse_transfer</emphasis> function, takes two std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;WAREHOUSE&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_SHOP</emphasis> &amp; <emphasis>FROM_DIST</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_OSTM</emphasis> &amp; <emphasis>FROM_OSTM</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="358" column="1" bodyfile="main.cpp" bodystart="358" bodyend="411"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" compoundref="_w_a_r_e_h_o_u_s_e_8h" startline="45" endline="45">WAREHOUSE::SetNumber_of_nokia</references>
        <referencedby refid="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" compoundref="main_8cpp" startline="419" endline="516">_nested_warehouse_transfer_</referencedby>
        <referencedby refid="main_8cpp_1a12500f2bcc3c3bb8ad7dd9d74c1637d1" compoundref="main_8cpp" startline="518" endline="644">_complex_warehouse_transfer_</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _nested_warehouse_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _to_two, std::shared_ptr&lt; OSTM &gt; _to_three, std::shared_ptr&lt; OSTM &gt; _from_, TM &amp;_tm, double _amount)</argsstring>
        <name>_nested_warehouse_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_two</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_three</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
<para><emphasis>nested_warehouse_transfer</emphasis> function, takes three std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;TX&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>tx, Transaction Object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;WAREHOUSE&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_SHOP</emphasis> &amp; <emphasis>FROM_DIST</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::shared_ptr&lt;OSTM&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>type, <emphasis>TO_OSTM</emphasis> &amp; <emphasis>FROM_OSTM</emphasis> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>NESTED <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> TEST _to_two</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="419" column="1" bodyfile="main.cpp" bodystart="419" bodyend="516"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" compoundref="_w_a_r_e_h_o_u_s_e_8h" startline="45" endline="45">WAREHOUSE::SetNumber_of_nokia</references>
        <references refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" compoundref="main_8cpp" startline="358" endline="411">_warehouse_transfer_</references>
        <referencedby refid="main_8cpp_1a12500f2bcc3c3bb8ad7dd9d74c1637d1" compoundref="main_8cpp" startline="518" endline="644">_complex_warehouse_transfer_</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a12500f2bcc3c3bb8ad7dd9d74c1637d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _complex_warehouse_transfer_</definition>
        <argsstring>(std::shared_ptr&lt; OSTM &gt; _to_, std::shared_ptr&lt; OSTM &gt; _to_two, std::shared_ptr&lt; OSTM &gt; _to_three, std::vector&lt; std::shared_ptr&lt; OSTM &gt;&gt; _warehouse_vec, std::shared_ptr&lt; OSTM &gt; _from_, TM &amp;_tm, double _amount)</argsstring>
        <name>_complex_warehouse_transfer_</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_two</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_to_three</declname>
        </param>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;&gt;</type>
          <declname>_warehouse_vec</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_o_s_t_m" kindref="compound">OSTM</ref> &gt;</type>
          <declname>_from_</declname>
        </param>
        <param>
          <type><ref refid="class_t_m" kindref="compound">TM</ref> &amp;</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>_amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Register the two single account</para><para>Declare required pointers</para><para>Register customers accounts from the collection (vector)</para><para>From std::shared_ptr&lt;OSTM&gt; to std::shared_ptr&lt;BANK&gt; to access the virtual methods</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;WAREHOUSE&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>NESTED <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> TEST _to_two</para><para>Make changes with the objects</para><para>From std::shared_ptr&lt;BANK&gt; to std::shared_ptr&lt;OSTM&gt; to store the memory spaces</para><para>Store changes</para><para>Commit changes</para>        </inbodydescription>
        <location file="main.cpp" line="518" column="1" bodyfile="main.cpp" bodystart="518" bodyend="644"/>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" compoundref="_w_a_r_e_h_o_u_s_e_8h" startline="45" endline="45">WAREHOUSE::SetNumber_of_nokia</references>
        <references refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" compoundref="main_8cpp" startline="358" endline="411">_warehouse_transfer_</references>
        <references refid="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" compoundref="main_8cpp" startline="419" endline="516">_nested_warehouse_transfer_</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>main method to run test </para>        </detaileddescription>
        <inbodydescription>
<para>Get the Transaction Manager<linebreak/>
 <ref refid="class_t_m" kindref="compound">TM</ref>&amp; tm = <ref refid="class_t_m_1a7ce5f35e0dae76df4fe116cf905bbe60" kindref="member">TM::Instance()</ref>;<linebreak/>
</para><para>Create vector to store std::shared_ptr&lt;OSTM&gt; pointers. All object will have unique ID by default<linebreak/>
 std::vector&lt;std::shared_ptr&lt;OSTM&gt;&gt; _customer_vec(vector_number);<linebreak/>
 std::vector&lt;std::shared_ptr&lt;OSTM&gt;&gt; _warehouse_vec(vector_number);<linebreak/>
</para><para>Create objects type of <ref refid="class_b_a_n_k" kindref="compound">BANK</ref>. All object will have unique ID by default<linebreak/>
 std::shared_ptr&lt;OSTM&gt; aib_ptr = new <ref refid="class_a_i_b" kindref="compound">AIB</ref>(100, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
 std::shared_ptr&lt;OSTM&gt; boi_ptr = new <ref refid="class_b_o_i" kindref="compound">BOI</ref>(200, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
 std::shared_ptr&lt;OSTM&gt; boa_ptr = new <ref refid="class_b_o_a" kindref="compound">BOA</ref>(300, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
 std::shared_ptr&lt;OSTM&gt; swplc_ptr = new <ref refid="class_s_w_b_p_l_c" kindref="compound">SWBPLC</ref>(400, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
 std::shared_ptr&lt;OSTM&gt; ulster_ptr = new <ref refid="class_u_l_s_t_e_r" kindref="compound">ULSTER</ref>(500, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
 std::shared_ptr&lt;OSTM&gt; unbl_ptr = new <ref refid="class_u_n_b_l" kindref="compound">UNBL</ref>(600, 500, &quot;Joe&quot;, &quot;Blog&quot;, &quot;High street, Kilkenny, Co.Kilkenny&quot;);<linebreak/>
</para><para>Create objects type of <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>. All object will have unique ID by default<linebreak/>
 std::shared_ptr&lt;OSTM&gt; w_dist = new <ref refid="class_c_a_r_p_h_o_n_e___w_a_r_e_h_o_u_s_e" kindref="compound">CARPHONE_WAREHOUSE()</ref>;<linebreak/>
 std::shared_ptr&lt;OSTM&gt; c_shop = new <ref refid="class_c_a_r_l_o_w___w" kindref="compound">CARLOW_W()</ref>;<linebreak/>
 std::shared_ptr&lt;OSTM&gt; k_shop = new <ref refid="class_k_i_l_k_e_n_n_y___w" kindref="compound">KILKENNY_W()</ref>;<linebreak/>
 std::shared_ptr&lt;OSTM&gt; t_shop = new <ref refid="class_t_a_l_l_a_g_h___w" kindref="compound">TALLAGH_W()</ref>;<linebreak/>
 std::shared_ptr&lt;OSTM&gt; d_shop = new <ref refid="class_d_u_n_d_a_l_k___w" kindref="compound">DUNDALK_W()</ref>;<linebreak/>
 std::shared_ptr&lt;OSTM&gt; s_shop = new <ref refid="class_s_l_i_g_o___w" kindref="compound">SLIGO_W()</ref>;<linebreak/>
</para><para>Create vector of std::shared_ptr&lt;OSTM&gt; <ref refid="class_b_a_n_k" kindref="compound">BANK</ref> pointers<linebreak/>
 vector_number is 100 at the moment<linebreak/>
 for(int i=0;i&lt;vector_number;++i)</para><para>Create vector of std::shared_ptr&lt;OSTM&gt; <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> pointers<linebreak/>
 vector_number is 100 at the moment<linebreak/>
 for(int i=0;i&lt;vector_number;++i)</para><para>Display <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> objects before transaction<linebreak/>
 w_dist-&gt;toString();<linebreak/>
 c_shop-&gt;toString();<linebreak/>
 k_shop-&gt;toString();<linebreak/>
 t_shop-&gt;toString();<linebreak/>
 d_shop-&gt;toString();<linebreak/>
 s_shop-&gt;toString();<linebreak/>
</para><para>Display <ref refid="class_b_a_n_k" kindref="compound">BANK</ref> objects before transaction<linebreak/>
 aib_ptr-&gt;toString();<linebreak/>
 boi_ptr-&gt;toString();<linebreak/>
 boa_ptr-&gt;toString();<linebreak/>
 swplc_ptr-&gt;toString();<linebreak/>
 ulster_ptr-&gt;toString();<linebreak/>
 unbl_ptr-&gt;toString();<linebreak/>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transferAmount</parametername>
</parameternamelist>
<parameterdescription>
<para>in the transaction, control the value in the transaction between objetcs</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threadArraySize</parametername>
</parameternamelist>
<parameterdescription>
<para>control number of threads <linebreak/>
 The logic in the IF ELSE statement distribute the threads between three different thread creating option.<linebreak/>
 If the threadArraySize is divisible with three, the threads will be distributed between function.<linebreak/>
 However, you can creates any number of threads, but to follow the correct output should increase the IF ELSE statement to distribute the threads in equal number.</para></parameterdescription>
</parameteritem>
</parameterlist>
Creating threads^n -&gt; threadArraySize<linebreak/>
 for (int i = 0; i &lt; threadArraySize; ++i)<linebreak/>
</para><para>TEST 1 : Nested transaction Test<linebreak/>
 thArray[i] = std::thread(<emphasis>nesting</emphasis>, aib_ptr, boi_ptr, std::ref(tm), transferAmount);</para><para>TEST 2 :Three different type of function call where the objects are participating in multiple type of transactions<linebreak/>
 thArray[i] = std::thread(<emphasis>two_account_transfer</emphasis>, aib_ptr, boi_ptr, std::ref(tm), transferAmount);<linebreak/>
 thArray[i] = std::thread(<emphasis>six_account_transfer</emphasis>, boi_ptr, boa_ptr, swplc_ptr, ulster_ptr, aib_ptr, unbl_ptr, std::ref(tm), transferAmount)<linebreak/>
 thArray[i] = std::thread(<emphasis>complex_transfer</emphasis>, aib_ptr, boi_ptr, std::ref(_customer_vec), std::ref(tm), transferAmount);</para><para>TEST 3 : Testing <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> type pointers within transactions<linebreak/>
 thArray[i] = std::thread(<emphasis>phone_transfer</emphasis>, c_shop, w_dist, std::ref(tm), transferAmount);</para><para>TEST 4 : Testing <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> type pointers within nested transactions<linebreak/>
 thArray[i] = std::thread(<emphasis>nested_warehouse_transfer</emphasis>, c_shop, d_shop, k_shop, w_dist, std::ref(tm), transferAmount);</para><para>TEST 5 : Testing <ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref> type pointers within mixed and nested transactions<linebreak/>
 thArray[i] = std::thread(<emphasis>warehouse_transfer</emphasis>, c_shop, w_dist, std::ref(tm), transferAmount);<linebreak/>
 thArray[i] = std::thread(<emphasis>nested_warehouse_transfer</emphasis>, c_shop, d_shop, k_shop, w_dist, std::ref(tm), transferAmount);<linebreak/>
 thArray[i] = std::thread(<emphasis>complex_warehouse_transfer</emphasis>, d_shop, c_shop, std::ref(_warehouse_vec), w_dist, std::ref(tm), transferAmount);<linebreak/>
</para><para>Display objects after all transactions are finished<linebreak/>
 Uncomment the required corresponding TEST to display results</para><para>Extra tx to call and display ROLLBACK value<linebreak/>
 std::shared_ptr&lt;TX&gt; tx = tm._get_tx();<linebreak/>
</para><para>Display the number of ROLLBACK by all the threads <linebreak/>
 std::cout &lt;&lt; &quot;Rollback counter is : &quot; &lt;&lt; tx-&gt;getTest_counter() &lt;&lt; std::endl;</para><para>Display object from vector</para><para>Clean up Transaction Manager from all main process associated transactions<linebreak/>
 tm._TX_EXIT();</para><para>Display all Transactions associated with the main process. It should be empty after _TX_EXIT() function call!!!<linebreak/>
 tm.print_all();</para>        </inbodydescription>
        <location file="main.cpp" line="649" column="1" bodyfile="main.cpp" bodystart="649" bodyend="1024"/>
        <references refid="class_t_m_1a7ce5f35e0dae76df4fe116cf905bbe60" compoundref="_t_m_8cpp" startline="28" endline="33">TM::Instance</references>
        <references refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" compoundref="main_8cpp" startline="206" endline="285">_nesting_</references>
        <references refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" compoundref="_t_m_8cpp" startline="78" endline="96">TM::_get_tx</references>
        <references refid="class_t_m_1a5e2d1127f2429f2f524d25f430eade06" compoundref="_t_m_8cpp" startline="101" endline="117">TM::_TX_EXIT</references>
        <references refid="class_t_m_1a1d6891b1d3e71cc0acef54e7afe71c09" compoundref="_t_m_8cpp" startline="121" endline="127">TM::print_all</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>To<sp/>change<sp/>this<sp/>license<sp/>header,<sp/>choose<sp/>License<sp/>Headers<sp/>in<sp/>Project<sp/>Properties.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>To<sp/>change<sp/>this<sp/>template<sp/>file,<sp/>choose<sp/>Tools<sp/>|<sp/>Templates</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>and<sp/>open<sp/>the<sp/>template<sp/>in<sp/>the<sp/>editor.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>main.cpp</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Author:<sp/>zoltan</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Created<sp/>on<sp/>November<sp/>27,<sp/>2017,<sp/>9:26<sp/>PM</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;unistd.h&gt;//used<sp/>for<sp/>pid_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//STM<sp/>library<sp/>requirement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_m_8h" kindref="compound">TM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_i_b_8h" kindref="compound">AIB.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_o_i_8h" kindref="compound">BOI.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_o_a_8h" kindref="compound">BOA.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_w_b_p_l_c_8h" kindref="compound">SWBPLC.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_l_s_t_e_r_8h" kindref="compound">ULSTER.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_u_n_b_l_8h" kindref="compound">UNBL.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Bank<sp/>Account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_w_a_r_e_h_o_u_s_e_8h" kindref="compound">WAREHOUSE.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_c_a_r_p_h_o_n_e___w_a_r_e_h_o_u_s_e_8h" kindref="compound">CARPHONE_WAREHOUSE.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_c_a_r_l_o_w___w_8h" kindref="compound">CARLOW_W.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_k_i_l_k_e_n_n_y___w_8h" kindref="compound">KILKENNY_W.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_t_a_l_l_a_g_h___w_8h" kindref="compound">TALLAGH_W.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_u_n_d_a_l_k___w_8h" kindref="compound">DUNDALK_W.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_l_i_g_o___w_8h" kindref="compound">SLIGO_W.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WAREHOUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_number<sp/>=<sp/>600;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="main_8cpp_1a944b67b9489cc68c8eac66d42f4515ec" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a944b67b9489cc68c8eac66d42f4515ec" kindref="member">_six_account_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_one_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_two_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_three_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_four_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_five_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_one_);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_two_);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_three_);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_four_);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_five_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM,<sp/>_FROM_ONE_OSTM,<sp/>_FROM_TWO_OSTM,<sp/>_FROM_THREE_OSTM,<sp/>_FROM_FOUR_OSTM,<sp/>_FROM_FIVE_OSTM;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;BANK&gt;<sp/>_TO_,<sp/>_FROM_ONE_,<sp/>_FROM_TWO_,<sp/>_FROM_THREE_,<sp/>_FROM_FOUR_,<sp/>_FROM_FIVE_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_ONE_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_one_));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_TWO_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_two_));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_THREE_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_three_));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FOUR_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_four_));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FIVE_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_five_));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_TO_-&gt;GetBalance()<sp/>+<sp/>(_amount<sp/>*<sp/>5));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_ONE_-&gt;SetBalance(_FROM_ONE_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_TWO_-&gt;SetBalance(_FROM_TWO_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_THREE_-&gt;SetBalance(_FROM_THREE_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FOUR_-&gt;SetBalance(_FROM_FOUR_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FIVE_-&gt;SetBalance(_FROM_FIVE_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_ONE_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_ONE_);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_TWO_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_TWO_);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_THREE_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_THREE_);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FOUR_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_FOUR_);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_FIVE_OSTM<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_FIVE_);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_ONE_OSTM);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_TWO_OSTM);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_THREE_OSTM);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_FOUR_OSTM);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_FIVE_OSTM);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="main_8cpp_1a83aef8c5b69afef4e38d14c17fe782b3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a83aef8c5b69afef4e38d14c17fe782b3" kindref="member">_two_account_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;BANK&gt;<sp/>_TO_BANK_,<sp/>_FROM_BANK_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM_,<sp/>_FROM_OSTM_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_TO_BANK_-&gt;GetBalance()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_BANK_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_BANK_);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>txTwo<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nestedDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nestedDone)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(txTwo-&gt;load(_to_));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(txTwo-&gt;load(_from_));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_TO_BANK_-&gt;GetBalance()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_BANK_);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_BANK_);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nestedDone<sp/>=<sp/>txTwo-&gt;commit();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" kindref="member">_nesting_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;BANK&gt;<sp/>_TO_BANK_,<sp/>_FROM_BANK_;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM_,<sp/>_FROM_OSTM_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_TO_BANK_-&gt;GetBalance()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_BANK_);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_BANK_);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>txTwo<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nestedDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nestedDone)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(txTwo-&gt;load(_to_));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(txTwo-&gt;load(_from_));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_BANK_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_TO_BANK_-&gt;GetBalance()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_BANK_);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_BANK_);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a83aef8c5b69afef4e38d14c17fe782b3" kindref="member">_two_account_transfer_</ref>(_to_,<sp/>_from_,<sp/>_tm,<sp/>_amount);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nestedDone<sp/>=<sp/>txTwo-&gt;commit();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="main_8cpp_1a0099d241c74532abfb1baae50a52da52" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0099d241c74532abfb1baae50a52da52" kindref="member">_complex_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_two_,<sp/>std::vector&lt;std::shared_ptr&lt;OSTM&gt;&gt;<sp/>_customer_vec,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_two_);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_FROM_OSTM_ONE_,<sp/>_FROM_OSTM_TWO_,<sp/>_TO_OSTM_;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;BANK&gt;<sp/>_FROM_,<sp/>_FROM_TWO_,<sp/>_TO_;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector_number;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obj<sp/>:<sp/>_customer_vec)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto&amp;&amp;<sp/>obj<sp/>=<sp/>_customer_vec.at(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;_register(obj);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_TWO_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(_from_two_));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_b_a_n_k" kindref="compound">BANK</ref>&gt;<sp/>(tx-&gt;load(obj));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_-&gt;<ref refid="class_b_a_n_k_1ae3e45b407bf8ec7175662442ea24b7c0" kindref="member">SetBalance</ref>(_FROM_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_TWO_-&gt;SetBalance(_FROM_TWO_-&gt;GetBalance()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_-&gt;SetBalance(_TO_-&gt;GetBalance()<sp/>+<sp/>(_amount<sp/>*<sp/>2));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_ONE_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_TWO_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_TWO_);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_ONE_);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_TWO_);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" kindref="member">_warehouse_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WAREHOUSE&gt;<sp/>_TO_SHOP_,<sp/>_FROM_DIST_;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM_,<sp/>_FROM_OSTM_;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;<ref refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" kindref="member">SetNumber_of_nokia</ref>(_TO_SHOP_-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_nokia(_FROM_DIST_-&gt;GetNumber_of_nokia()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_samsung(_TO_SHOP_-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_samsung(_FROM_DIST_-&gt;GetNumber_of_samsung()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_iphones(_TO_SHOP_-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_iphones(_FROM_DIST_-&gt;GetNumber_of_iphones()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_sony(_TO_SHOP_-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_sony(_FROM_DIST_-&gt;GetNumber_of_sony()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_DIST_);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" kindref="member">_nested_warehouse_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_to_two,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_to_three,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_two);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_three);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WAREHOUSE&gt;<sp/>_TO_SHOP_,<sp/>_FROM_DIST_;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM_,<sp/>_FROM_OSTM_;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;<ref refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" kindref="member">SetNumber_of_nokia</ref>(_TO_SHOP_-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_nokia(_FROM_DIST_-&gt;GetNumber_of_nokia()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_samsung(_TO_SHOP_-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_samsung(_FROM_DIST_-&gt;GetNumber_of_samsung()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_iphones(_TO_SHOP_-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_iphones(_FROM_DIST_-&gt;GetNumber_of_iphones()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_sony(_TO_SHOP_-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_sony(_FROM_DIST_-&gt;GetNumber_of_sony()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_DIST_);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>txTwo<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nestedDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nestedDone)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(txTwo-&gt;load(_to_two));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(txTwo-&gt;load(_from_));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;<ref refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" kindref="member">SetNumber_of_nokia</ref>(_TO_SHOP_-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_nokia(_FROM_DIST_-&gt;GetNumber_of_nokia()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_samsung(_TO_SHOP_-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_samsung(_FROM_DIST_-&gt;GetNumber_of_samsung()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_iphones(_TO_SHOP_-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_iphones(_FROM_DIST_-&gt;GetNumber_of_iphones()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_sony(_TO_SHOP_-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_sony(_FROM_DIST_-&gt;GetNumber_of_sony()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_DIST_);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NESTED<sp/>TRANSACTION<sp/>TEST<sp/>_to_three</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" kindref="member">_warehouse_transfer_</ref>(_to_three,<sp/>_from_,<sp/>_tm,<sp/>_amount);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nestedDone<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="main_8cpp_1a12500f2bcc3c3bb8ad7dd9d74c1637d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a12500f2bcc3c3bb8ad7dd9d74c1637d1" kindref="member">_complex_warehouse_transfer_</ref>(std::shared_ptr&lt;OSTM&gt;<sp/>_to_,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_to_two,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_to_three,<sp/>std::vector&lt;std::shared_ptr&lt;OSTM&gt;&gt;<sp/>_warehouse_vec,<sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_from_,<sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>_tm,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_amount)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_two);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_to_three);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>tx-&gt;_register(_from_);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;WAREHOUSE&gt;<sp/>_TO_SHOP_,<sp/>_TO_SHOP_TWO,<sp/>_TO_SHOP_VEC,<sp/>_FROM_DIST_;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>_TO_OSTM_,<sp/>_TO_OSTM_TWO,<sp/>_TO_OSTM_VEC,<sp/>_FROM_OSTM_;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector_number;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>obj<sp/>:<sp/>_warehouse_vec)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//auto&amp;&amp;<sp/>obj<sp/>=<sp/>_warehouse_vec.at(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;_register(obj);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_to_));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_TWO<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_to_two));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_VEC<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(obj));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(tx-&gt;load(_from_));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;<ref refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" kindref="member">SetNumber_of_nokia</ref>(_TO_SHOP_-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_TWO-&gt;SetNumber_of_nokia(_TO_SHOP_TWO-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_VEC-&gt;SetNumber_of_nokia(_TO_SHOP_VEC-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_nokia(_FROM_DIST_-&gt;GetNumber_of_nokia()<sp/>-<sp/>(_amount<sp/>*<sp/>3));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_samsung(_TO_SHOP_-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_TWO-&gt;SetNumber_of_samsung(_TO_SHOP_TWO-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_VEC-&gt;SetNumber_of_samsung(_TO_SHOP_VEC-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_samsung(_FROM_DIST_-&gt;GetNumber_of_samsung()<sp/>-<sp/>(_amount<sp/>*<sp/>3));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_iphones(_TO_SHOP_-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_TWO-&gt;SetNumber_of_iphones(_TO_SHOP_TWO-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_VEC-&gt;SetNumber_of_iphones(_TO_SHOP_VEC-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_iphones(_FROM_DIST_-&gt;GetNumber_of_iphones()<sp/>-<sp/>(_amount<sp/>*<sp/>3));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_sony(_TO_SHOP_-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_TWO-&gt;SetNumber_of_sony(_TO_SHOP_TWO-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_VEC-&gt;SetNumber_of_sony(_TO_SHOP_VEC-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_sony(_FROM_DIST_-&gt;GetNumber_of_sony()<sp/>-<sp/>(_amount<sp/>*<sp/>3));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_TWO<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_TWO);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_VEC<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_VEC);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_DIST_);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_SHOP_TWO);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_TO_SHOP_VEC);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>txTwo<sp/>=<sp/>_tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nestedDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!nestedDone)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(txTwo-&gt;load(_to_two));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_w_a_r_e_h_o_u_s_e" kindref="compound">WAREHOUSE</ref>&gt;<sp/>(txTwo-&gt;load(_from_));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;<ref refid="class_w_a_r_e_h_o_u_s_e_1a300d1fe21a47e45c0d5d27e25add346f" kindref="member">SetNumber_of_nokia</ref>(_TO_SHOP_-&gt;GetNumber_of_nokia()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_nokia(_FROM_DIST_-&gt;GetNumber_of_nokia()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_samsung(_TO_SHOP_-&gt;GetNumber_of_samsung()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_samsung(_FROM_DIST_-&gt;GetNumber_of_samsung()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_iphones(_TO_SHOP_-&gt;GetNumber_of_iphones()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_iphones(_FROM_DIST_-&gt;GetNumber_of_iphones()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_SHOP_-&gt;SetNumber_of_sony(_TO_SHOP_-&gt;GetNumber_of_sony()<sp/>+<sp/>_amount);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_DIST_-&gt;SetNumber_of_sony(_FROM_DIST_-&gt;GetNumber_of_sony()<sp/>-<sp/>_amount);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TO_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_TO_SHOP_);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FROM_OSTM_<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_o_s_t_m" kindref="compound">OSTM</ref>&gt;<sp/>(_FROM_DIST_);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_TO_OSTM_);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txTwo-&gt;store(_FROM_OSTM_);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NESTED<sp/>TRANSACTION<sp/>TEST<sp/>_to_three</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a1c170f18aac9dbb8aba1ad2f7e4619cc" kindref="member">_warehouse_transfer_</ref>(_to_three,<sp/>_from_,<sp/>_tm,<sp/>_amount);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a52fcb0d50c67be8cd20f2aca338683c7" kindref="member">_nested_warehouse_transfer_</ref>(_to_,<sp/>_to_two,<sp/>_to_three,<sp/>_from_,<sp/>_tm,<sp/>_amount);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nestedDone<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>tx-&gt;commit();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::runtime_error&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_m" kindref="compound">TM</ref>&amp;<sp/>tm<sp/>=<sp/><ref refid="class_t_m_1a7ce5f35e0dae76df4fe116cf905bbe60" kindref="member">TM::Instance</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr<sp/>&lt;<sp/>OSTM&gt;&gt;_customer_vec;<sp/></highlight><highlight class="comment">//(vector_number);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr<sp/>&lt;<sp/>OSTM&gt;&gt;_warehouse_vec;<sp/></highlight><highlight class="comment">//(vector_number);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>aib_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_a_i_b" kindref="compound">AIB</ref>(100,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>boi_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_o_i" kindref="compound">BOI</ref>(200,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>boa_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_o_a" kindref="compound">BOA</ref>(300,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>swplc_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_w_b_p_l_c" kindref="compound">SWBPLC</ref>(400,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>ulster_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_u_l_s_t_e_r" kindref="compound">ULSTER</ref>(500,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>unbl_ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_u_n_b_l" kindref="compound">UNBL</ref>(600,<sp/>500,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>w_dist(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_a_r_p_h_o_n_e___w_a_r_e_h_o_u_s_e" kindref="compound">CARPHONE_WAREHOUSE</ref>());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>c_shop(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_a_r_l_o_w___w" kindref="compound">CARLOW_W</ref>());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>k_shop(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_i_l_k_e_n_n_y___w" kindref="compound">KILKENNY_W</ref>());</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>t_shop(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_a_l_l_a_g_h___w" kindref="compound">TALLAGH_W</ref>());</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>d_shop(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_u_n_d_a_l_k___w" kindref="compound">DUNDALK_W</ref>());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>s_shop(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_l_i_g_o___w" kindref="compound">SLIGO_W</ref>());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector_number;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>5<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_a_r_l_o_w___w" kindref="compound">CARLOW_W</ref>());</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_warehouse_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>4<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_k_i_l_k_e_n_n_y___w" kindref="compound">KILKENNY_W</ref>());</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_warehouse_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_a_l_l_a_g_h___w" kindref="compound">TALLAGH_W</ref>());</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_warehouse_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_u_n_d_a_l_k___w" kindref="compound">DUNDALK_W</ref>());</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_warehouse_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_l_i_g_o___w" kindref="compound">SLIGO_W</ref>());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_warehouse_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector_number;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>6<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_a_i_b" kindref="compound">AIB</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>5<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_o_i" kindref="compound">BOI</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>4<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_b_o_a" kindref="compound">BOA</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_w_b_p_l_c" kindref="compound">SWBPLC</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_u_l_s_t_e_r" kindref="compound">ULSTER</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;OSTM&gt;<sp/>sharedptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_u_n_b_l" kindref="compound">UNBL</ref>(i,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;Joe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Blog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;High<sp/>street,<sp/>Kilkenny,<sp/>Co.Kilkenny&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec.push_back(std::move(sharedptr));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>d_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>s_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>1<sp/>:<sp/>object<sp/>requirements</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>aib_ptr-&gt;toString();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>boi_ptr-&gt;toString();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>2<sp/>:<sp/>object<sp/>requirements<sp/></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>aib_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boi_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boa_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>swplc_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ulster_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>unbl_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;vector_number;<sp/>++i){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec[i]-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>3<sp/>:<sp/>object<sp/>requirements</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>4<sp/>:<sp/>objects<sp/>requirements</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>5<sp/>:<sp/>objects<sp/>requirements</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto&amp;&amp;<sp/>elem:<sp/>_warehouse_vec){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem-&gt;toString();<sp/>//<sp/>virtual<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>transferAmount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadArraySize<sp/>=<sp/>99;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>thArray[threadArraySize];</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>threadArraySize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(<ref refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" kindref="member">_nesting_</ref>,<sp/>aib_ptr,<sp/>boi_ptr,<sp/>std::ref(tm),<sp/>transferAmount);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(<ref refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" kindref="member">_nesting_</ref>,<sp/>aib_ptr,<sp/>boi_ptr,<sp/>std::ref(tm),<sp/>transferAmount);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(<ref refid="main_8cpp_1a5675cb594d74aa1bf5e80233370ffd81" kindref="member">_nesting_</ref>,<sp/>aib_ptr,<sp/>boi_ptr,<sp/>std::ref(tm),<sp/>transferAmount);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_two_account_transfer_,<sp/>aib_ptr,<sp/>boi_ptr,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_six_account_transfer_,<sp/>boi_ptr,<sp/>boa_ptr,<sp/>swplc_ptr,<sp/>ulster_ptr,<sp/>aib_ptr,<sp/>unbl_ptr,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_complex_transfer_,<sp/>aib_ptr,<sp/>boi_ptr,<sp/>std::ref(_customer_vec),<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_warehouse_transfer_,<sp/>c_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_warehouse_transfer_,<sp/>k_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_warehouse_transfer_,<sp/>t_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_nested_warehouse_transfer_,<sp/>c_shop,<sp/>d_shop,<sp/>k_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_nested_warehouse_transfer_,<sp/>k_shop,<sp/>s_shop,<sp/>t_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_nested_warehouse_transfer_,<sp/>t_shop,<sp/>c_shop,<sp/>s_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>%<sp/>3<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_warehouse_transfer_,<sp/>c_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_nested_warehouse_transfer_,<sp/>k_shop,<sp/>s_shop,<sp/>t_shop,<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(i<sp/>%<sp/>1<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i]<sp/>=<sp/>std::thread(_complex_warehouse_transfer_,<sp/>d_shop,<sp/>s_shop,<sp/>c_shop,<sp/>std::ref(_warehouse_vec),<sp/>w_dist,<sp/>std::ref(tm),<sp/>transferAmount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Join<sp/>threads^n<sp/>-&gt;<sp/>threadArraySize&lt;br&gt;</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>thArray[i].join();</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>threadArraySize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thArray[i].join();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nMain<sp/>process<sp/>print<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>1<sp/>:<sp/>object<sp/>requirements</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>aib_ptr-&gt;toString();</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>boi_ptr-&gt;toString();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>2<sp/>:<sp/>object<sp/>requirements<sp/></highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>aib_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boi_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>boa_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>swplc_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>ulster_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>unbl_ptr-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;vector_number;<sp/>++i){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_customer_vec[i]-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>3<sp/>:<sp/>object<sp/>requirements</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>4<sp/>:<sp/>objects<sp/>requirements</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TEST<sp/>5<sp/>:<sp/>objects<sp/>requirements</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_dist-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_shop-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto&amp;&amp;<sp/>elem:<sp/>_warehouse_vec){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem-&gt;toString();<sp/>//<sp/>virtual<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TEST<sp/>5<sp/>FINISH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nMAIN<sp/>PROCESS<sp/>EXIT<sp/>!!!!<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TX&gt;<sp/>tx<sp/>=<sp/>tm.<ref refid="class_t_m_1a41cb0226cc4080c931651b13f74a0075" kindref="member">_get_tx</ref>();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rollback<sp/>counter<sp/>is<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tx-&gt;getTest_counter()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;[vector_number]&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector_number;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//_customer_vec[i]-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto&amp;&amp;<sp/>os<sp/>=<sp/>_customer_vec.at(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;[_warehouse_vec]&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for(auto&amp;&amp;<sp/>elem:<sp/>_warehouse_vec){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem-&gt;toString();<sp/>//<sp/>virtual<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_customer_vec[10]-&gt;toString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.<ref refid="class_t_m_1a5e2d1127f2429f2f524d25f430eade06" kindref="member">_TX_EXIT</ref>();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nPRINT<sp/>ALL<sp/>FROM<sp/>TM<sp/>!!!!<sp/>SHOULD<sp/>BE<sp/>EMPTY<sp/>AFTER<sp/>_TX_EXIT()<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>tm.<ref refid="class_t_m_1a1d6891b1d3e71cc0acef54e7afe71c09" kindref="member">print_all</ref>();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.cpp"/>
  </compounddef>
</doxygen>
