digraph "TM::_get_tx"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="TM::_get_tx",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="_six_account_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a944b67b9489cc68c8eac66d42f4515ec",tooltip="six_account_transfer function, takes six std::shared_ptr<OSTM> pointer, the Transaction manager..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="_two_account_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a83aef8c5b69afef4e38d14c17fe782b3",tooltip="two_account_transfer function, takes two std::shared_ptr<OSTM> pointer, the Transaction manager..."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="_nesting_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a5675cb594d74aa1bf5e80233370ffd81",tooltip="nesting function, takes two std::shared_ptr<OSTM> pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account This function create nested transactions inside the transaction, and call other function to nesting the transaction as well "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="main",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a840291bc02cba5474a4cb46a9b9566fe"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="_complex_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a0099d241c74532abfb1baae50a52da52",tooltip="complex_transfer function, takes two std::shared_ptr<OSTM> pointer, a vector of std::shared_ptr<OSTM>..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="_warehouse_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a1c170f18aac9dbb8aba1ad2f7e4619cc",tooltip="warehouse_transfer function, takes two std::shared_ptr<OSTM> pointer, the Transaction manager..."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="_nested_warehouse_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a52fcb0d50c67be8cd20f2aca338683c7",tooltip="nested_warehouse_transfer function, takes three std::shared_ptr<OSTM> pointer, the Transaction manage..."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="_complex_warehouse\l_transfer_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$main_8cpp.html#a12500f2bcc3c3bb8ad7dd9d74c1637d1"];
  Node7 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
