<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_u_l_s_t_e_r">
<title>ULSTER class Reference</title>
<para>
    <programlisting>#include <link linkend="_u_l_s_t_e_r_8h">&lt;ULSTER.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for ULSTER</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_u_l_s_t_e_r__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for ULSTER</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_u_l_s_t_e_r__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int accountNumber</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string address</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double balance</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string firstName</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string fullname</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string lastName</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_aeef5c3e20f2a82344b4b83e5ccf4cc40_1aeef5c3e20f2a82344b4b83e5ccf4cc40">copy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; from, std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; to)<para><emphasis>OSTM required virtual method for deep copy.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="class_u_l_s_t_e_r_a1ad672ae865a9f559bf4d3c33c243d63_1a1ad672ae865a9f559bf4d3c33c243d63">GetAccountNumber</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_l_s_t_e_r_ac31a16a960e53ea592b0d809a3ba167d_1ac31a16a960e53ea592b0d809a3ba167d">GetAddress</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_u_l_s_t_e_r_ae70da9686ac038862900182a984e56eb_1ae70da9686ac038862900182a984e56eb">GetBalance</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; <link linkend="class_u_l_s_t_e_r_ad0c05e562b0c67283edfa4940c9aa728_1ad0c05e562b0c67283edfa4940c9aa728">getBaseCopy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; object)<para><emphasis>OSTM required virtual method for returning a pointer that is copy of the original pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_l_s_t_e_r_a85ee4e42d9b309608d8dfbedac65ff27_1a85ee4e42d9b309608d8dfbedac65ff27">GetFirstName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_l_s_t_e_r_abb93ac2163f908782d00cbae169ebb91_1abb93ac2163f908782d00cbae169ebb91">GetFullname</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_l_s_t_e_r_a9320b012bccda4ebf6b41c9ed972743c_1a9320b012bccda4ebf6b41c9ed972743c">GetLastName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_u_l_s_t_e_r">ULSTER</link> <link linkend="class_u_l_s_t_e_r_aa096fc13a27cf4c4238af3aad8382a13_1aa096fc13a27cf4c4238af3aad8382a13">operator=</link> (
const <link linkend="class_u_l_s_t_e_r">ULSTER</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_ae28bbc54174cd9b3b268d827c122c412_1ae28bbc54174cd9b3b268d827c122c412">SetAccountNumber</link> (
int accountNumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_a5b0662f0524ce8ce710881a05b431fad_1a5b0662f0524ce8ce710881a05b431fad">SetAddress</link> (
std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_a288ded3e96cf65a066f13529db94b182_1a288ded3e96cf65a066f13529db94b182">SetBalance</link> (
double balance)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_a07b57449397c42be1c2b512851dceebd_1a07b57449397c42be1c2b512851dceebd">SetFirstName</link> (
std::string firstName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_a38d245bc2b6bb14bbb39c3347766140d_1a38d245bc2b6bb14bbb39c3347766140d">SetFullname</link> (
std::string fullname)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_ab2fec6b440c29b1953296ad23d4b432c_1ab2fec6b440c29b1953296ad23d4b432c">SetLastName</link> (
std::string lastName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_l_s_t_e_r_a341bbcb3f7d6ef10f30d4734ceed10ee_1a341bbcb3f7d6ef10f30d4734ceed10ee">toString</link> (
)<para><emphasis>OSTM required virtual method for display object.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_l_s_t_e_r_a637ad8cb5537167ab51cd079637a8323_1a637ad8cb5537167ab51cd079637a8323">ULSTER</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_l_s_t_e_r_ad80944864d4f907dd30b02a1d1a563cc_1ad80944864d4f907dd30b02a1d1a563cc">ULSTER</link> (
int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_l_s_t_e_r_ac7207ca64f86ef3081e176deb222805d_1ac7207ca64f86ef3081e176deb222805d">ULSTER</link> (
std::shared_ptr&lt; <link linkend="class_b_a_n_k">BANK</link> &gt; obj, int _version, int _unique_id)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_l_s_t_e_r_ad8847497742850609cd4748bbb6d0a8e_1ad8847497742850609cd4748bbb6d0a8e">ULSTER</link> (
const <link linkend="class_u_l_s_t_e_r">ULSTER</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="class_u_l_s_t_e_r_a4ceb68bdbc806f74f9e55096f8223453_1a4ceb68bdbc806f74f9e55096f8223453">~ULSTER</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_u_l_s_t_e_r_aeef5c3e20f2a82344b4b83e5ccf4cc40_1aeef5c3e20f2a82344b4b83e5ccf4cc40">
                <title>void ULSTER::copy (std::shared_ptr&lt; OSTM &gt; to, std::shared_ptr&lt; OSTM &gt; from)</title> <emphasis>OSTM required virtual method for deep copy.</emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a1ad672ae865a9f559bf4d3c33c243d63_1a1ad672ae865a9f559bf4d3c33c243d63">
                <title>int ULSTER::GetAccountNumber () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ac31a16a960e53ea592b0d809a3ba167d_1ac31a16a960e53ea592b0d809a3ba167d">
                <title>std::string ULSTER::GetAddress () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ae70da9686ac038862900182a984e56eb_1ae70da9686ac038862900182a984e56eb">
                <title>double ULSTER::GetBalance () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ad0c05e562b0c67283edfa4940c9aa728_1ad0c05e562b0c67283edfa4940c9aa728">
                <title>std::shared_ptr&lt; OSTM &gt; ULSTER::getBaseCopy (std::shared_ptr&lt; OSTM &gt; object)</title> <emphasis>OSTM required virtual method for returning a pointer that is copy of the original pointer.</emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a85ee4e42d9b309608d8dfbedac65ff27_1a85ee4e42d9b309608d8dfbedac65ff27">
                <title>std::string ULSTER::GetFirstName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_abb93ac2163f908782d00cbae169ebb91_1abb93ac2163f908782d00cbae169ebb91">
                <title>std::string ULSTER::GetFullname () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a9320b012bccda4ebf6b41c9ed972743c_1a9320b012bccda4ebf6b41c9ed972743c">
                <title>std::string ULSTER::GetLastName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_aa096fc13a27cf4c4238af3aad8382a13_1aa096fc13a27cf4c4238af3aad8382a13">
                <title>ULSTER ULSTER::operator= (const ULSTER &amp;orig)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ae28bbc54174cd9b3b268d827c122c412_1ae28bbc54174cd9b3b268d827c122c412">
                <title>void ULSTER::SetAccountNumber (int accountNumber)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a5b0662f0524ce8ce710881a05b431fad_1a5b0662f0524ce8ce710881a05b431fad">
                <title>void ULSTER::SetAddress (std::string address)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a288ded3e96cf65a066f13529db94b182_1a288ded3e96cf65a066f13529db94b182">
                <title>void ULSTER::SetBalance (double balance)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a07b57449397c42be1c2b512851dceebd_1a07b57449397c42be1c2b512851dceebd">
                <title>void ULSTER::SetFirstName (std::string firstName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a38d245bc2b6bb14bbb39c3347766140d_1a38d245bc2b6bb14bbb39c3347766140d">
                <title>void ULSTER::SetFullname (std::string fullname)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ab2fec6b440c29b1953296ad23d4b432c_1ab2fec6b440c29b1953296ad23d4b432c">
                <title>void ULSTER::SetLastName (std::string lastName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a341bbcb3f7d6ef10f30d4734ceed10ee_1a341bbcb3f7d6ef10f30d4734ceed10ee">
                <title>void ULSTER::toString ()</title> <emphasis>OSTM required virtual method for display object.</emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a637ad8cb5537167ab51cd079637a8323_1a637ad8cb5537167ab51cd079637a8323">
                <title>ULSTER::ULSTER ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ad80944864d4f907dd30b02a1d1a563cc_1ad80944864d4f907dd30b02a1d1a563cc">
                <title>ULSTER::ULSTER (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ac7207ca64f86ef3081e176deb222805d_1ac7207ca64f86ef3081e176deb222805d">
                <title>ULSTER::ULSTER (std::shared_ptr&lt; BANK &gt; obj, int _version, int _unique_id)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_ad8847497742850609cd4748bbb6d0a8e_1ad8847497742850609cd4748bbb6d0a8e">
                <title>ULSTER::ULSTER (const ULSTER &amp;orig)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_l_s_t_e_r_a4ceb68bdbc806f74f9e55096f8223453_1a4ceb68bdbc806f74f9e55096f8223453">
                <title>ULSTER::~ULSTER ()</title> <emphasis></emphasis>
                
            </section>
</section>
