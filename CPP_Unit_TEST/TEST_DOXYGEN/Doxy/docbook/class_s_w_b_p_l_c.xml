<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_s_w_b_p_l_c">
<title>SWBPLC class Reference</title>
<para>
    <programlisting>#include <link linkend="_s_w_b_p_l_c_8h">&lt;SWBPLC.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for SWBPLC</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_s_w_b_p_l_c__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for SWBPLC</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_s_w_b_p_l_c__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int accountNumber</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string address</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double balance</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string firstName</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string fullname</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string lastName</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a9468640482a6cfb9bfb4115fc59191d5_1a9468640482a6cfb9bfb4115fc59191d5">copy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; from, std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; to)<para><emphasis>OSTM required virtual method for deep copy.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="class_s_w_b_p_l_c_a1a997f6d333e5021970e50605431d7df_1a1a997f6d333e5021970e50605431d7df">GetAccountNumber</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_s_w_b_p_l_c_a3a62a57b3ecdd06ed977ef372dab89ad_1a3a62a57b3ecdd06ed977ef372dab89ad">GetAddress</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_s_w_b_p_l_c_af7f5f662ab926bfb9c0c1c7156cde24c_1af7f5f662ab926bfb9c0c1c7156cde24c">GetBalance</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; <link linkend="class_s_w_b_p_l_c_a77f0e0d6c08a95066d277bf6b2073a5c_1a77f0e0d6c08a95066d277bf6b2073a5c">getBaseCopy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; object)<para><emphasis>OSTM required virtual method for returning a pointer that is copy of the original pointer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_s_w_b_p_l_c_ace6bbcd6546896e581e3a2ee9504d090_1ace6bbcd6546896e581e3a2ee9504d090">GetFirstName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_s_w_b_p_l_c_adb74b3cbc40a401bf7ca4dfb5269c336_1adb74b3cbc40a401bf7ca4dfb5269c336">GetFullname</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_s_w_b_p_l_c_a72b2595acea28dae9e4f5816dd3c4652_1a72b2595acea28dae9e4f5816dd3c4652">GetLastName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_s_w_b_p_l_c">SWBPLC</link> <link linkend="class_s_w_b_p_l_c_a1e4b8f85d4e8e29429d691e258fea2e7_1a1e4b8f85d4e8e29429d691e258fea2e7">operator=</link> (
const <link linkend="class_s_w_b_p_l_c">SWBPLC</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a45eb1e6a73fde0dc00824319d4e0b81a_1a45eb1e6a73fde0dc00824319d4e0b81a">SetAccountNumber</link> (
int accountNumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a99590e47dda8361b2d5869fd315f92f8_1a99590e47dda8361b2d5869fd315f92f8">SetAddress</link> (
std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a9a0d94da8922f00ca4a3e5fa774e8b3f_1a9a0d94da8922f00ca4a3e5fa774e8b3f">SetBalance</link> (
double balance)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a8146eabca4648ef679188904f677df9d_1a8146eabca4648ef679188904f677df9d">SetFirstName</link> (
std::string firstName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a09376d46475bbceda897948714ff1e72_1a09376d46475bbceda897948714ff1e72">SetFullname</link> (
std::string fullname)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_aa5581ea5d2e0315b816876737e887f09_1aa5581ea5d2e0315b816876737e887f09">SetLastName</link> (
std::string lastName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_s_w_b_p_l_c_a320f4e2b023038668d941ce5d0c46aeb_1a320f4e2b023038668d941ce5d0c46aeb">SWBPLC</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_s_w_b_p_l_c_a29c408f7ccb7c5962dab8ac858758a89_1a29c408f7ccb7c5962dab8ac858758a89">SWBPLC</link> (
int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_s_w_b_p_l_c_a33e460bff6f51b30209a6f5a25a24d7d_1a33e460bff6f51b30209a6f5a25a24d7d">SWBPLC</link> (
std::shared_ptr&lt; <link linkend="class_b_a_n_k">BANK</link> &gt; obj, int _version, int _unique_id)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_s_w_b_p_l_c_a767c6ae2b15f523b5ec6e35e137dcc96_1a767c6ae2b15f523b5ec6e35e137dcc96">SWBPLC</link> (
const <link linkend="class_s_w_b_p_l_c">SWBPLC</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_s_w_b_p_l_c_a761c77b5a204b4ae05ffb01bd602c3c2_1a761c77b5a204b4ae05ffb01bd602c3c2">toString</link> (
)<para><emphasis>OSTM required virtual method for display object.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="class_s_w_b_p_l_c_a5d6f00a76145f32424ff6db9ac23c6fe_1a5d6f00a76145f32424ff6db9ac23c6fe">~SWBPLC</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_s_w_b_p_l_c_a9468640482a6cfb9bfb4115fc59191d5_1a9468640482a6cfb9bfb4115fc59191d5">
                <title>void SWBPLC::copy (std::shared_ptr&lt; OSTM &gt; to, std::shared_ptr&lt; OSTM &gt; from)</title> <emphasis>OSTM required virtual method for deep copy.</emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a1a997f6d333e5021970e50605431d7df_1a1a997f6d333e5021970e50605431d7df">
                <title>int SWBPLC::GetAccountNumber () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a3a62a57b3ecdd06ed977ef372dab89ad_1a3a62a57b3ecdd06ed977ef372dab89ad">
                <title>std::string SWBPLC::GetAddress () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_af7f5f662ab926bfb9c0c1c7156cde24c_1af7f5f662ab926bfb9c0c1c7156cde24c">
                <title>double SWBPLC::GetBalance () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a77f0e0d6c08a95066d277bf6b2073a5c_1a77f0e0d6c08a95066d277bf6b2073a5c">
                <title>std::shared_ptr&lt; OSTM &gt; SWBPLC::getBaseCopy (std::shared_ptr&lt; OSTM &gt; object)</title> <emphasis>OSTM required virtual method for returning a pointer that is copy of the original pointer.</emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_ace6bbcd6546896e581e3a2ee9504d090_1ace6bbcd6546896e581e3a2ee9504d090">
                <title>std::string SWBPLC::GetFirstName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_adb74b3cbc40a401bf7ca4dfb5269c336_1adb74b3cbc40a401bf7ca4dfb5269c336">
                <title>std::string SWBPLC::GetFullname () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a72b2595acea28dae9e4f5816dd3c4652_1a72b2595acea28dae9e4f5816dd3c4652">
                <title>std::string SWBPLC::GetLastName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a1e4b8f85d4e8e29429d691e258fea2e7_1a1e4b8f85d4e8e29429d691e258fea2e7">
                <title>SWBPLC SWBPLC::operator= (const SWBPLC &amp;orig)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a45eb1e6a73fde0dc00824319d4e0b81a_1a45eb1e6a73fde0dc00824319d4e0b81a">
                <title>void SWBPLC::SetAccountNumber (int accountNumber)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a99590e47dda8361b2d5869fd315f92f8_1a99590e47dda8361b2d5869fd315f92f8">
                <title>void SWBPLC::SetAddress (std::string address)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a9a0d94da8922f00ca4a3e5fa774e8b3f_1a9a0d94da8922f00ca4a3e5fa774e8b3f">
                <title>void SWBPLC::SetBalance (double balance)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a8146eabca4648ef679188904f677df9d_1a8146eabca4648ef679188904f677df9d">
                <title>void SWBPLC::SetFirstName (std::string firstName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a09376d46475bbceda897948714ff1e72_1a09376d46475bbceda897948714ff1e72">
                <title>void SWBPLC::SetFullname (std::string fullname)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_aa5581ea5d2e0315b816876737e887f09_1aa5581ea5d2e0315b816876737e887f09">
                <title>void SWBPLC::SetLastName (std::string lastName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a320f4e2b023038668d941ce5d0c46aeb_1a320f4e2b023038668d941ce5d0c46aeb">
                <title>SWBPLC::SWBPLC ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a29c408f7ccb7c5962dab8ac858758a89_1a29c408f7ccb7c5962dab8ac858758a89">
                <title>SWBPLC::SWBPLC (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a33e460bff6f51b30209a6f5a25a24d7d_1a33e460bff6f51b30209a6f5a25a24d7d">
                <title>SWBPLC::SWBPLC (std::shared_ptr&lt; BANK &gt; obj, int _version, int _unique_id)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a767c6ae2b15f523b5ec6e35e137dcc96_1a767c6ae2b15f523b5ec6e35e137dcc96">
                <title>SWBPLC::SWBPLC (const SWBPLC &amp;orig)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a761c77b5a204b4ae05ffb01bd602c3c2_1a761c77b5a204b4ae05ffb01bd602c3c2">
                <title>void SWBPLC::toString ()</title> <emphasis>OSTM required virtual method for display object.</emphasis>
                
            </section>
            <section xml:id="class_s_w_b_p_l_c_a5d6f00a76145f32424ff6db9ac23c6fe_1a5d6f00a76145f32424ff6db9ac23c6fe">
                <title>SWBPLC::~SWBPLC ()</title> <emphasis></emphasis>
                
            </section>
</section>
