.TH "ULSTER" 3 "Sun Apr 1 2018" "CppUnit test STM" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ULSTER \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ULSTER\&.h>\fP
.PP
Inherits \fBBANK\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBcopy\fP (std::shared_ptr< \fBOSTM\fP > to, std::shared_ptr< \fBOSTM\fP > from)"
.br
.RI "\fI\fBOSTM\fP required virtual method for deep copy\&. \fP"
.ti -1c
.RI "virtual int \fBGetAccountNumber\fP () const "
.br
.ti -1c
.RI "virtual std::string \fBGetAddress\fP () const "
.br
.ti -1c
.RI "virtual double \fBGetBalance\fP () const "
.br
.ti -1c
.RI "virtual std::shared_ptr< \fBOSTM\fP > \fBgetBaseCopy\fP (std::shared_ptr< \fBOSTM\fP > object)"
.br
.RI "\fI\fBOSTM\fP required virtual method for returning a pointer that is copy of the original pointer\&. \fP"
.ti -1c
.RI "virtual std::string \fBGetFirstName\fP () const "
.br
.ti -1c
.RI "virtual std::string \fBGetFullname\fP () const "
.br
.ti -1c
.RI "virtual std::string \fBGetLastName\fP () const "
.br
.ti -1c
.RI "\fBULSTER\fP \fBoperator=\fP (const \fBULSTER\fP &orig)"
.br
.ti -1c
.RI "virtual void \fBSetAccountNumber\fP (int \fBaccountNumber\fP)"
.br
.ti -1c
.RI "virtual void \fBSetAddress\fP (std::string \fBaddress\fP)"
.br
.ti -1c
.RI "virtual void \fBSetBalance\fP (double \fBbalance\fP)"
.br
.ti -1c
.RI "virtual void \fBSetFirstName\fP (std::string \fBfirstName\fP)"
.br
.ti -1c
.RI "virtual void \fBSetFullname\fP (std::string \fBfullname\fP)"
.br
.ti -1c
.RI "virtual void \fBSetLastName\fP (std::string \fBlastName\fP)"
.br
.ti -1c
.RI "virtual void \fBtoString\fP ()"
.br
.RI "\fI\fBOSTM\fP required virtual method for display object\&. \fP"
.ti -1c
.RI "\fBULSTER\fP ()"
.br
.ti -1c
.RI "\fBULSTER\fP (int \fBaccountNumber\fP, double \fBbalance\fP, std::string \fBfirstName\fP, std::string \fBlastName\fP, std::string \fBaddress\fP)"
.br
.ti -1c
.RI "\fBULSTER\fP (std::shared_ptr< \fBBANK\fP > obj, int _version, int _unique_id)"
.br
.ti -1c
.RI "\fBULSTER\fP (const \fBULSTER\fP &orig)"
.br
.ti -1c
.RI "virtual \fB~ULSTER\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBaccountNumber\fP"
.br
.ti -1c
.RI "std::string \fBaddress\fP"
.br
.ti -1c
.RI "double \fBbalance\fP"
.br
.ti -1c
.RI "std::string \fBfirstName\fP"
.br
.ti -1c
.RI "std::string \fBfullname\fP"
.br
.ti -1c
.RI "std::string \fBlastName\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 19 of file ULSTER\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ULSTER::ULSTER ()\fC [inline]\fP"

.PP
Definition at line 24 of file ULSTER\&.h\&.
.PP
References accountNumber, address, balance, firstName, fullname, and lastName\&.
.PP
Referenced by getBaseCopy(), and ULSTER()\&.
.PP
.nf
24              : BANK() {
25         this->accountNumber = 0;
26         this->balance = 50;
27         this->firstName = "Joe";
28         this->lastName = "Blog";
29         this->address = "High street, Carlow";
30         this->fullname = firstName + " " + lastName;
31     };
.fi
.SS "ULSTER::ULSTER (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)\fC [inline]\fP"

.PP
Definition at line 35 of file ULSTER\&.h\&.
.PP
References accountNumber, address, balance, firstName, fullname, and lastName\&.
.PP
.nf
35                                                                                                           : BANK() {
36         this->accountNumber = accountNumber;
37         this->balance = balance;
38         this->firstName = firstName;
39         this->lastName = lastName;
40         this->address = address;
41         this->fullname = firstName + " " + lastName;
42     };
.fi
.SS "ULSTER::ULSTER (std::shared_ptr< \fBBANK\fP > obj, int _version, int _unique_id)\fC [inline]\fP"

.PP
Definition at line 46 of file ULSTER\&.h\&.
.PP
References accountNumber, address, balance, firstName, fullname, lastName, and ULSTER()\&.
.PP
.nf
46                                                                   : BANK(_version, _unique_id) {
47 
48         this->accountNumber = obj->GetAccountNumber();
49         this->balance = obj->GetBalance();
50         this->firstName = obj->GetFirstName();
51         this->lastName = obj->GetLastName();
52         this->address = obj->GetAddress();
53         this->fullname = obj->GetFirstName() + " " + obj->GetLastName(); 
54     };
.fi
.SS "ULSTER::ULSTER (const \fBULSTER\fP & orig)"

.PP
Definition at line 13 of file ULSTER\&.cpp\&.
.PP
.nf
13                                  {
14 }
.fi
.SS "ULSTER::~ULSTER ()\fC [virtual]\fP"

.PP
Definition at line 16 of file ULSTER\&.cpp\&.
.PP
Referenced by operator=()\&.
.PP
.nf
16                 {
17 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ULSTER::copy (std::shared_ptr< \fBOSTM\fP > from, std::shared_ptr< \fBOSTM\fP > to)\fC [virtual]\fP"

.PP
\fBOSTM\fP required virtual method for deep copy\&. 
.PP
Reimplemented from \fBOSTM\fP\&.
.PP
Definition at line 35 of file ULSTER\&.cpp\&.
.PP
References OSTM::Set_Unique_ID()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
35                                                                  {
36 
37     std::shared_ptr<ULSTER> objTO = std::dynamic_pointer_cast<ULSTER>(to);
38     std::shared_ptr<ULSTER> objFROM = std::dynamic_pointer_cast<ULSTER>(from);
39     objTO->Set_Unique_ID(objFROM->Get_Unique_ID());
40     objTO->Set_Version(objFROM->Get_Version());
41     objTO->SetAccountNumber(objFROM->GetAccountNumber());
42     objTO->SetBalance(objFROM->GetBalance());
43 
44     
45 }
.fi
.SS "int ULSTER::GetAccountNumber () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 78 of file ULSTER\&.cpp\&.
.PP
References accountNumber\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
78                                    {
79     return accountNumber;
80 }
.fi
.SS "std::string ULSTER::GetAddress () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 62 of file ULSTER\&.cpp\&.
.PP
References address\&.
.PP
Referenced by operator=()\&.
.PP
.nf
62                                    {
63     return address;
64 }
.fi
.SS "double ULSTER::GetBalance () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 70 of file ULSTER\&.cpp\&.
.PP
References balance\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
70                                 {
71     return balance;
72 }
.fi
.SS "std::shared_ptr< \fBOSTM\fP > ULSTER::getBaseCopy (std::shared_ptr< \fBOSTM\fP > object)\fC [virtual]\fP"

.PP
\fBOSTM\fP required virtual method for returning a pointer that is copy of the original pointer\&. 
.PP
Reimplemented from \fBOSTM\fP\&.
.PP
Definition at line 23 of file ULSTER\&.cpp\&.
.PP
References ULSTER()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
24 {
25     std::shared_ptr<BANK> objTO = std::dynamic_pointer_cast<BANK>(object);
26     std::shared_ptr<BANK> obj(new ULSTER(objTO,object->Get_Version(),object->Get_Unique_ID())); 
27     std::shared_ptr<OSTM> ostm_obj = std::dynamic_pointer_cast<OSTM>(obj);                                  
28     return ostm_obj;
29 }
.fi
.SS "std::string ULSTER::GetFirstName () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 94 of file ULSTER\&.cpp\&.
.PP
References firstName\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
94                                      {
95     return firstName;
96 }
.fi
.SS "std::string ULSTER::GetFullname () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 102 of file ULSTER\&.cpp\&.
.PP
References fullname\&.
.PP
Referenced by operator=()\&.
.PP
.nf
102                                     {
103     return fullname;
104 }
.fi
.SS "std::string ULSTER::GetLastName () const\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 86 of file ULSTER\&.cpp\&.
.PP
References lastName\&.
.PP
Referenced by operator=(), and toString()\&.
.PP
.nf
86                                     {
87     return lastName;
88 }
.fi
.SS "\fBULSTER\fP ULSTER::operator= (const \fBULSTER\fP & orig)\fC [inline]\fP"

.PP
Definition at line 62 of file ULSTER\&.h\&.
.PP
References accountNumber, address, balance, copy(), firstName, fullname, GetAccountNumber(), GetAddress(), GetBalance(), getBaseCopy(), GetFirstName(), GetFullname(), GetLastName(), lastName, SetAccountNumber(), SetAddress(), SetBalance(), SetFirstName(), SetFullname(), SetLastName(), toString(), and ~ULSTER()\&.
.PP
.nf
62 {};
.fi
.SS "void ULSTER::SetAccountNumber (int accountNumber)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 74 of file ULSTER\&.cpp\&.
.PP
References accountNumber\&.
.PP
Referenced by operator=()\&.
.PP
.nf
74                                                {
75     this->accountNumber = accountNumber;
76 }
.fi
.SS "void ULSTER::SetAddress (std::string address)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 58 of file ULSTER\&.cpp\&.
.PP
References address\&.
.PP
Referenced by operator=()\&.
.PP
.nf
58                                          {
59     this->address = address;
60 }
.fi
.SS "void ULSTER::SetBalance (double balance)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 66 of file ULSTER\&.cpp\&.
.PP
References balance\&.
.PP
Referenced by operator=()\&.
.PP
.nf
66                                       {
67     this->balance = balance;
68 }
.fi
.SS "void ULSTER::SetFirstName (std::string firstName)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 90 of file ULSTER\&.cpp\&.
.PP
References firstName\&.
.PP
Referenced by operator=()\&.
.PP
.nf
90                                              {
91     this->firstName = firstName;
92 }
.fi
.SS "void ULSTER::SetFullname (std::string fullname)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 98 of file ULSTER\&.cpp\&.
.PP
References fullname\&.
.PP
Referenced by operator=()\&.
.PP
.nf
98                                            {
99     this->fullname = fullname;
100 }
.fi
.SS "void ULSTER::SetLastName (std::string lastName)\fC [virtual]\fP"

.PP
Reimplemented from \fBBANK\fP\&.
.PP
Definition at line 82 of file ULSTER\&.cpp\&.
.PP
References lastName\&.
.PP
Referenced by operator=()\&.
.PP
.nf
82                                            {
83     this->lastName = lastName;
84 }
.fi
.SS "void ULSTER::toString ()\fC [virtual]\fP"

.PP
\fBOSTM\fP required virtual method for display object\&. 
.PP
Reimplemented from \fBOSTM\fP\&.
.PP
Definition at line 53 of file ULSTER\&.cpp\&.
.PP
References OSTM::Get_Unique_ID(), OSTM::Get_Version(), GetAccountNumber(), GetBalance(), GetFirstName(), and GetLastName()\&.
.PP
Referenced by operator=()\&.
.PP
.nf
54 {
55    std::cout << "\nULSTER BANK" << "\nUnique ID : " << this->Get_Unique_ID() << "\nInt account : " << this->GetAccountNumber() << "\nDouble value : " << this->GetBalance() << "\nFirst name: " << this->GetFirstName() << "\nLast name : " << this->GetLastName()  << "\nVersion number : " << this->Get_Version() << std::endl;
56 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "int ULSTER::accountNumber\fC [private]\fP"

.PP
Definition at line 95 of file ULSTER\&.h\&.
.PP
Referenced by GetAccountNumber(), operator=(), SetAccountNumber(), and ULSTER()\&.
.SS "std::string ULSTER::address\fC [private]\fP"

.PP
Definition at line 97 of file ULSTER\&.h\&.
.PP
Referenced by GetAddress(), operator=(), SetAddress(), and ULSTER()\&.
.SS "double ULSTER::balance\fC [private]\fP"

.PP
Definition at line 96 of file ULSTER\&.h\&.
.PP
Referenced by GetBalance(), operator=(), SetBalance(), and ULSTER()\&.
.SS "std::string ULSTER::firstName\fC [private]\fP"

.PP
Definition at line 93 of file ULSTER\&.h\&.
.PP
Referenced by GetFirstName(), operator=(), SetFirstName(), and ULSTER()\&.
.SS "std::string ULSTER::fullname\fC [private]\fP"

.PP
Definition at line 92 of file ULSTER\&.h\&.
.PP
Referenced by GetFullname(), operator=(), SetFullname(), and ULSTER()\&.
.SS "std::string ULSTER::lastName\fC [private]\fP"

.PP
Definition at line 94 of file ULSTER\&.h\&.
.PP
Referenced by GetLastName(), operator=(), SetLastName(), and ULSTER()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CppUnit test STM from the source code\&.
