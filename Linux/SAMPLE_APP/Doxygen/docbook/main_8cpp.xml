<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="main_8cpp">
    <title>main.cpp File Reference</title>
    <programlisting>#include &lt;cstdlib&gt;</programlisting>
    <programlisting>#include &lt;iostream&gt;</programlisting>
    <programlisting>#include &lt;thread&gt;</programlisting>
    <programlisting>#include &quot;TM.h&quot;</programlisting>
    <programlisting>#include &quot;AIB.h&quot;</programlisting>
    <programlisting>#include &quot;BOI.h&quot;</programlisting>
    <programlisting>#include &lt;mutex&gt;</programlisting>
    <programlisting>#include &lt;memory&gt;</programlisting>
    <programlisting>#include &lt;condition_variable&gt;</programlisting>
    <programlisting>#include &lt;vector&gt;</programlisting>
<para>Include dependency diagram for main.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="main_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for main.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="main_8cpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="main_8cpp_a5675cb594d74aa1bf5e80233370ffd81_1a5675cb594d74aa1bf5e80233370ffd81">_nesting_</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; _to_, std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; _from_, <link linkend="class_t_m">TM</link> &amp; _tm, double _amount)<para><emphasis>&lt;em&gt;nesting&lt;/em&gt; function, takes two std::shared_ptr&lt;OSTM&gt; pointer, the Transaction manager, and the amount to use in the transaction and transfer the _amount value from one account to the another account
This function create nested transactions inside the transaction, and call other function to nesting the transaction as well</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="main_8cpp_a83aef8c5b69afef4e38d14c17fe782b3_1a83aef8c5b69afef4e38d14c17fe782b3">_two_account_transfer_</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; _to_, std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; _from_, <link linkend="class_t_m">TM</link> &amp; _tm, double _amount)<para><emphasis>&lt;em&gt;two_account_transfer&lt;/em&gt; function, takes two OSTM type shared pointer, the Transaction manager, and the amount to use in the transaction</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="main_8cpp_a840291bc02cba5474a4cb46a9b9566fe_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file main.cpp</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">/*</emphasis>
2 <emphasis class="comment">&#32;*&#32;File:&#32;&#32;&#32;main.cpp</emphasis>
3 <emphasis class="comment">&#32;*&#32;Author:&#32;Zoltan&#32;Fuzesi&#32;C00197361,&#32;</emphasis>
4 <emphasis class="comment">&#32;*&#32;IT&#32;Carlow,&#32;Software&#32;Engineering,&#32;</emphasis>
5 <emphasis class="comment">&#32;*</emphasis>
6 <emphasis class="comment">&#32;*&#32;Supervisor&#32;:&#32;Joe&#32;Kehoe,&#32;</emphasis>
7 <emphasis class="comment">&#32;*</emphasis>
8 <emphasis class="comment">&#32;*&#32;C++&#32;Software&#32;Transactional&#32;Memory,&#32;</emphasis>
9 <emphasis class="comment">&#32;*&#32;</emphasis>
10 <emphasis class="comment">&#32;*&#32;Created&#32;on&#32;December&#32;18,&#32;2017,&#32;2:09&#32;PM</emphasis>
11 <emphasis class="comment">&#32;*&#32;OSTM&#32;base&#32;class&#32;function&#32;declarations.</emphasis>
12 <emphasis class="comment">&#32;*/</emphasis>
13 
14 <emphasis class="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
15 <emphasis class="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
16 <emphasis class="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
17 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_t_m_8h">TM.h</link>&quot;</emphasis>
18 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_a_i_b_8h">AIB.h</link>&quot;</emphasis>&#32;&#32;&#32;
19 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_b_o_i_8h">BOI.h</link>&quot;</emphasis>&#32;&#32;&#32;&#32;
20 <emphasis class="preprocessor">#include&#32;&lt;mutex&gt;</emphasis>
21 <emphasis class="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
22 <emphasis class="preprocessor">#include&#32;&lt;condition_variable&gt;</emphasis>
23 <emphasis class="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
24 
<link linkend="main_8cpp_a83aef8c5b69afef4e38d14c17fe782b3_1a83aef8c5b69afef4e38d14c17fe782b3">32 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="main_8cpp_a83aef8c5b69afef4e38d14c17fe782b3_1a83aef8c5b69afef4e38d14c17fe782b3">_two_account_transfer_</link>(std::shared_ptr&lt;OSTM&gt;&#32;_to_,&#32;std::shared_ptr&lt;OSTM&gt;&#32;_from_,&#32;<link linkend="class_t_m">TM</link>&amp;&#32;_tm,&#32;<emphasis class="keywordtype">double</emphasis>&#32;_amount)&#32;{
33 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@34&#32;Request&#32;for&#32;transaction&#32;object&#32;with&#32;the&#32;transaction&#32;manager*/</emphasis>
34 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TX&gt;&#32;tx&#32;=&#32;_tm.<link linkend="class_t_m_a41cb0226cc4080c931651b13f74a0075_1a41cb0226cc4080c931651b13f74a0075">_get_tx</link>();
35 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@36-37&#32;Register&#32;the&#32;two&#32;OSTM&#32;type&#32;shared&#32;pointer&#32;to&#32;the&#32;library&#32;:&#32;_to_&#32;and&#32;_from_&#32;*/</emphasis>
36 &#32;&#32;&#32;&#32;tx-&gt;_register(_to_);
37 &#32;&#32;&#32;&#32;tx-&gt;_register(_from_);
38 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;&#32;@39-40&#32;We&#32;need&#32;to&#32;create&#32;local&#32;pointers&#32;to&#32;use&#32;the&#32;temporary&#32;pointers&#32;in&#32;the&#32;transaction&#32;*/</emphasis>
39 &#32;&#32;&#32;&#32;std::shared_ptr&lt;BANK&gt;&#32;_TO_BANK_,&#32;_FROM_BANK_;
40 &#32;&#32;&#32;&#32;std::shared_ptr&lt;OSTM&gt;&#32;_TO_OSTM_,&#32;_FROM_OSTM_;
41 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@42&#32;Declare&#32;boolean&#32;variable&#32;to&#32;control&#32;the&#32;transaction&#32;with&#32;the&#32;while&#32;loop*/</emphasis>
42 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">bool</emphasis>&#32;done&#32;=&#32;<emphasis class="keyword">false</emphasis>;
43 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@44&#32;Use&#32;try&#32;catch&#32;blocks&#32;!&#32;If&#32;you&#32;try&#32;to&#32;use&#32;exidantly&#32;any&#32;nullpointer&#32;to&#32;register,save&#32;or&#32;load&#32;in&#32;the&#32;libaray,&#32;then&#32;the&#32;library&#32;wil&#32;throw&#32;a&#32;runtime&#32;execption*/</emphasis>
44 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@46&#32;Declare&#32;the&#32;WHILE&#32;loop&#32;with&#32;the&#32;boolean&#32;variable&#32;*/</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(!done)&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@48-49&#32;Retrieve&#32;the&#32;copy&#32;OSTM&#32;type&#32;pointers&#32;you&#32;registered&#32;(_to_&#32;and&#32;_from_)&#32;from&#32;the&#32;library,&#32;and&#32;cast&#32;it&#32;back&#32;to&#32;BANK&#32;type.&#32;In&#32;this&#32;way&#32;you&#32;can&#32;used&#32;the&#32;BANK&#32;virtual&#32;methods&#32;to&#32;access&#32;the&#32;AIB&#32;and&#32;BOI&#32;objects&#32;values*/</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(tx-&gt;load(_to_));
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(tx-&gt;load(_from_));
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@52-53&#32;Makes&#32;changes&#32;with&#32;the&#32;local&#32;pointers.&#32;Remove&#32;value&#32;from&#32;the&#32;first&#32;object&#32;and&#32;add&#32;to&#32;the&#32;second&#32;object&#32;!&#32;TRANSFER&#32;!&#32;*/</emphasis>
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_-&gt;<link linkend="class_b_a_n_k_ae3e45b407bf8ec7175662442ea24b7c0_1ae3e45b407bf8ec7175662442ea24b7c0">SetBalance</link>(_TO_BANK_-&gt;GetBalance()&#32;+&#32;_amount);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()&#32;-&#32;_amount);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@55-56&#32;Cast&#32;back&#32;the&#32;BANK&#32;type&#32;pointers&#32;to&#32;OSTM&#32;type&#32;before&#32;try&#32;to&#32;store&#32;the&#32;changes&#32;with&#32;the&#32;objetcs&#32;*/</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_TO_BANK_);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_FROM_BANK_);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@58-59&#32;Store&#32;changes&#32;has&#32;made&#32;with&#32;the&#32;local&#32;pointers&#32;*/</emphasis>
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tx-&gt;store(_TO_OSTM_);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tx-&gt;store(_FROM_OSTM_);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@62&#32;Commit&#32;changes&#32;with&#32;the&#32;nested&#32;transaction*/</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;done&#32;=&#32;tx-&gt;commit();
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
63 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@64-65&#32;Catch&#32;block&#32;to&#32;catch&#32;runtime&#32;errors.&#32;Print&#32;error&#32;to&#32;console*/</emphasis>
64 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">catch</emphasis>&#32;(std::runtime_error&amp;&#32;e)&#32;{
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;std::endl;
66 &#32;&#32;&#32;&#32;}
67 }
68 
<link linkend="main_8cpp_a5675cb594d74aa1bf5e80233370ffd81_1a5675cb594d74aa1bf5e80233370ffd81">77 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="main_8cpp_a5675cb594d74aa1bf5e80233370ffd81_1a5675cb594d74aa1bf5e80233370ffd81">_nesting_</link>(std::shared_ptr&lt;OSTM&gt;&#32;_to_,&#32;std::shared_ptr&lt;OSTM&gt;&#32;_from_,&#32;<link linkend="class_t_m">TM</link>&amp;&#32;_tm,&#32;<emphasis class="keywordtype">double</emphasis>&#32;_amount)&#32;{
78 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@79&#32;Request&#32;fro&#32;transaction&#32;object&#32;with&#32;the&#32;transaction&#32;manager*/</emphasis>
79 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TX&gt;&#32;tx&#32;=&#32;_tm.<link linkend="class_t_m_a41cb0226cc4080c931651b13f74a0075_1a41cb0226cc4080c931651b13f74a0075">_get_tx</link>();
80 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@81-82&#32;Register&#32;the&#32;two&#32;OSTM&#32;type&#32;shared&#32;pointer&#32;to&#32;the&#32;library&#32;:&#32;_to_&#32;and&#32;_from_&#32;*/</emphasis>
81 &#32;&#32;&#32;&#32;tx-&gt;_register(_to_);
82 &#32;&#32;&#32;&#32;tx-&gt;_register(_from_);
83 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;&#32;@84-85&#32;We&#32;need&#32;to&#32;create&#32;local&#32;pointers&#32;to&#32;use&#32;the&#32;temporary&#32;pointers&#32;in&#32;the&#32;transaction&#32;*/</emphasis>
84 &#32;&#32;&#32;&#32;std::shared_ptr&lt;BANK&gt;&#32;_TO_BANK_,&#32;_FROM_BANK_;
85 &#32;&#32;&#32;&#32;std::shared_ptr&lt;OSTM&gt;&#32;_TO_OSTM_,&#32;_FROM_OSTM_;
86 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@87&#32;Declare&#32;boolean&#32;variable&#32;to&#32;control&#32;the&#32;transaction&#32;with&#32;the&#32;while&#32;loop*/</emphasis>
87 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">bool</emphasis>&#32;done&#32;=&#32;<emphasis class="keyword">false</emphasis>;
88 &#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@89&#32;Use&#32;try&#32;catch&#32;blocks&#32;!&#32;If&#32;you&#32;try&#32;to&#32;use&#32;exidantly&#32;any&#32;nullpointer&#32;to&#32;register,save&#32;or&#32;load&#32;in&#32;the&#32;libaray,&#32;then&#32;the&#32;library&#32;wil&#32;throw&#32;a&#32;runtime&#32;execption*/</emphasis>
89 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@91&#32;Declare&#32;the&#32;WHILE&#32;loop&#32;with&#32;the&#32;boolean&#32;variable&#32;*/</emphasis>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(!done)&#32;{
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@93-94&#32;Retrieve&#32;the&#32;copy&#32;OSTM&#32;type&#32;pointers&#32;you&#32;registered&#32;(_to_&#32;and&#32;_from_)&#32;from&#32;the&#32;library,&#32;and&#32;cast&#32;it&#32;back&#32;to&#32;BANK&#32;type.&#32;In&#32;this&#32;way&#32;you&#32;can&#32;used&#32;the&#32;BANK&#32;virtual&#32;methods&#32;to&#32;access&#32;the&#32;AIB&#32;and&#32;BOI&#32;objects&#32;values*/</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(tx-&gt;load(_to_));
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(tx-&gt;load(_from_));
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@97-98&#32;make&#32;changes&#32;with&#32;the&#32;local&#32;pointers&#32;*/</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_-&gt;<link linkend="class_b_a_n_k_ae3e45b407bf8ec7175662442ea24b7c0_1ae3e45b407bf8ec7175662442ea24b7c0">SetBalance</link>(_TO_BANK_-&gt;GetBalance()&#32;+&#32;_amount);
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()&#32;-&#32;_amount);
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@100-101&#32;Cast&#32;back&#32;the&#32;BANK&#32;type&#32;pointers&#32;to&#32;OSTM&#32;type&#32;before&#32;try&#32;to&#32;store&#32;the&#32;changes&#32;with&#32;the&#32;objetcs&#32;*/</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_TO_BANK_);
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_FROM_BANK_);
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@103-104&#32;Store&#32;changes&#32;has&#32;made&#32;with&#32;the&#32;local&#32;pointers&#32;*/</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tx-&gt;store(_TO_OSTM_);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tx-&gt;store(_FROM_OSTM_);
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@107&#32;Retrieve&#32;a&#32;Transaction&#32;object&#32;to&#32;used&#32;in&#32;the&#32;NESTED&#32;TRANSACTION.&#32;Because&#32;the&#32;same&#32;thread&#32;request&#32;the&#32;transaction&#32;object&#32;the&#32;transaction&#32;manager&#32;will&#32;return&#32;back&#32;the&#32;same&#32;transaction&#32;object,&#32;and&#32;increase&#32;the&#32;nesting&#32;associated&#32;with&#32;the&#32;transaction&#32;*/</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;TX&gt;&#32;txTwo&#32;=&#32;_tm.<link linkend="class_t_m_a41cb0226cc4080c931651b13f74a0075_1a41cb0226cc4080c931651b13f74a0075">_get_tx</link>();
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@109&#32;Declare&#32;boolean&#32;variable&#32;to&#32;control&#32;the&#32;nested&#32;transaction&#32;with&#32;the&#32;while&#32;loop*/</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">bool</emphasis>&#32;nestedDone&#32;=&#32;<emphasis class="keyword">false</emphasis>;
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@111&#32;Declare&#32;the&#32;WHILE&#32;loop&#32;with&#32;the&#32;boolean&#32;variable&#32;*/</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(!nestedDone)&#32;{
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@114-115Retrieve&#32;the&#32;copy&#32;OSTM&#32;type&#32;pointers&#32;you&#32;registered&#32;(_to_&#32;and&#32;_from_)&#32;from&#32;the&#32;library,&#32;and&#32;cast&#32;it&#32;back&#32;to&#32;BANK&#32;type.&#32;In&#32;this&#32;way&#32;you&#32;can&#32;used&#32;the&#32;BANK&#32;virtual&#32;methods&#32;to&#32;access&#32;the&#32;AIB&#32;and&#32;BOI&#32;objects&#32;values*/</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(txTwo-&gt;load(_to_));
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_b_a_n_k">BANK</link>&gt;&#32;(txTwo-&gt;load(_from_));
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@117-118&#32;make&#32;changes&#32;with&#32;the&#32;local&#32;pointers&#32;*/</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_BANK_-&gt;<link linkend="class_b_a_n_k_ae3e45b407bf8ec7175662442ea24b7c0_1ae3e45b407bf8ec7175662442ea24b7c0">SetBalance</link>(_TO_BANK_-&gt;GetBalance()&#32;+&#32;_amount);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_BANK_-&gt;SetBalance(_FROM_BANK_-&gt;GetBalance()&#32;-&#32;_amount);
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@120-121&#32;Cast&#32;back&#32;the&#32;BANK&#32;type&#32;pointers&#32;to&#32;OSTM&#32;type&#32;before&#32;try&#32;to&#32;store&#32;the&#32;changes&#32;with&#32;the&#32;objetcs&#32;*/</emphasis>
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_TO_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_TO_BANK_);
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_FROM_OSTM_&#32;=&#32;std::dynamic_pointer_cast&lt;<link linkend="class_o_s_t_m">OSTM</link>&gt;&#32;(_FROM_BANK_);
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@123-124&#32;Store&#32;changes&#32;has&#32;made&#32;with&#32;the&#32;local&#32;pointers&#32;*/</emphasis>
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;txTwo-&gt;store(_TO_OSTM_);
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;txTwo-&gt;store(_FROM_OSTM_);
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@126&#32;Call&#32;other&#32;function&#32;that&#32;will&#32;nesting&#32;the&#32;transaction&#32;to&#32;the&#32;next&#32;level&#32;*/</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="main_8cpp_a83aef8c5b69afef4e38d14c17fe782b3_1a83aef8c5b69afef4e38d14c17fe782b3">_two_account_transfer_</link>(_to_,&#32;_from_,&#32;_tm,&#32;_amount);
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@128&#32;Commit&#32;changes&#32;with&#32;the&#32;nested&#32;transaction*/</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nestedDone&#32;=&#32;txTwo-&gt;commit();
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@131&#32;Commit&#32;changes&#32;with&#32;the&#32;outer&#32;transaction*/</emphasis>
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;done&#32;=&#32;tx-&gt;commit();
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
133 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@134-135&#32;Catch&#32;block&#32;to&#32;catch&#32;runtime&#32;errors.&#32;Print&#32;error&#32;to&#32;console*/</emphasis>
134 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">catch</emphasis>&#32;(std::runtime_error&amp;&#32;e)&#32;{
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;e.what()&#32;&lt;&lt;&#32;std::endl;
136 &#32;&#32;&#32;&#32;}
137 }
138 
<link linkend="main_8cpp_a840291bc02cba5474a4cb46a9b9566fe_1a840291bc02cba5474a4cb46a9b9566fe">142 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="main_8cpp_a840291bc02cba5474a4cb46a9b9566fe_1a840291bc02cba5474a4cb46a9b9566fe">main</link>(<emphasis class="keywordtype">void</emphasis>)&#32;{
143 &#32;&#32;&#32;&#32;
144 &#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@146&#32;Get&#32;the&#32;Transaction&#32;Manager&#32;*/</emphasis>
145 &#32;&#32;&#32;&#32;&#32;
146 &#32;&#32;&#32;&#32;<link linkend="class_t_m">TM</link>&amp;&#32;tm&#32;=&#32;<link linkend="class_t_m_a7ce5f35e0dae76df4fe116cf905bbe60_1a7ce5f35e0dae76df4fe116cf905bbe60">TM::Instance</link>();
147 &#32;&#32;&#32;&#32;
148 &#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@151-152&#32;Create&#32;BANK&#32;object&#32;OSTM&#32;type.&#32;All&#32;object&#32;will&#32;get&#32;the&#32;unique&#32;ID&#32;generated&#32;by&#32;default*/</emphasis>
149 &#32;&#32;&#32;&#32;&#32;
150 &#32;&#32;&#32;&#32;std::shared_ptr&lt;OSTM&gt;&#32;aib_ptr(<emphasis class="keyword">new</emphasis>&#32;<link linkend="class_a_i_b">AIB</link>(100,&#32;500,&#32;<emphasis class="stringliteral">&quot;Joe&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Blog&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;High&#32;street,&#32;Kilkenny,&#32;Co.Kilkenny&quot;</emphasis>));
151 &#32;&#32;&#32;&#32;std::shared_ptr&lt;OSTM&gt;&#32;boi_ptr(<emphasis class="keyword">new</emphasis>&#32;<link linkend="class_b_o_i">BOI</link>(200,&#32;500,&#32;<emphasis class="stringliteral">&quot;Mark&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;darcy&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Main&#32;street,&#32;CArlow,&#32;Co.Carlow&quot;</emphasis>));
152 
153 &#32;&#32;&#32;&#32;&#32;
154 &#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@155-156&#32;Display&#32;BANK&#32;objects&#32;before&#32;transaction*/</emphasis>
155 &#32;&#32;&#32;&#32;aib_ptr-&gt;toString();
156 &#32;&#32;&#32;&#32;boi_ptr-&gt;toString();
157 &#32;&#32;&#32;&#32;
158 &#32;&#32;&#32;&#32;&#32;
159 &#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@160&#32;transferAmount&#32;in&#32;the&#32;transaction,&#32;control&#32;the&#32;value&#32;in&#32;the&#32;transaction&#32;between&#32;objetcs*/</emphasis>
160 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;transferAmount&#32;=&#32;1;
162 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;threadArraySize&#32;=&#32;300;
163 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@164&#32;Create&#32;a&#32;thread&#32;array&#32;with&#32;the&#32;threadArraySize&#32;declared&#32;before&#32;&#32;*/</emphasis>
164 &#32;&#32;&#32;&#32;std::thread&#32;thArray[threadArraySize];
165 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@166&#32;Creating&#32;the&#32;threads&#32;with&#32;the&#32;loop&#32;*/</emphasis>
166 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;threadArraySize;&#32;++i)&#32;{
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@168&#32;with&#32;the&#32;new&#32;thread&#32;created&#32;call&#32;the&#32;function&#32;_nesting_*/</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thArray[i]&#32;=&#32;std::thread(<link linkend="main_8cpp_a5675cb594d74aa1bf5e80233370ffd81_1a5675cb594d74aa1bf5e80233370ffd81">_nesting_</link>,&#32;aib_ptr,&#32;boi_ptr,&#32;std::ref(tm),&#32;transferAmount);
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@170&#32;with&#32;the&#32;new&#32;thread&#32;created&#32;call&#32;the&#32;function&#32;_two_account_transfer_*/</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thArray[i]&#32;=&#32;std::thread(<link linkend="main_8cpp_a83aef8c5b69afef4e38d14c17fe782b3_1a83aef8c5b69afef4e38d14c17fe782b3">_two_account_transfer_</link>,&#32;aib_ptr,&#32;boi_ptr,&#32;std::ref(tm),&#32;transferAmount);
171 &#32;&#32;&#32;&#32;}
172 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@173-175&#32;Join&#32;all&#32;the&#32;threads&#32;created&#32;*/</emphasis>
173 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>&#32;(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;threadArraySize;&#32;++i)&#32;{
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;thArray[i].join();
175 &#32;&#32;&#32;&#32;}
176 
177 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@178-179&#32;Display&#32;objects&#32;after&#32;all&#32;transactions&#32;are&#32;finished&#32;*/</emphasis>
178 &#32;&#32;&#32;&#32;aib_ptr-&gt;toString();
179 &#32;&#32;&#32;&#32;boi_ptr-&gt;toString();
180 
181 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@182&#32;For&#32;testing&#32;purpose&#32;create&#32;a&#32;new&#32;transaction&#32;object&#32;to&#32;print&#32;out&#32;the&#32;rollback&#32;counter&#32;*/</emphasis>
182 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TX&gt;&#32;tx&#32;=&#32;tm.<link linkend="class_t_m_a41cb0226cc4080c931651b13f74a0075_1a41cb0226cc4080c931651b13f74a0075">_get_tx</link>();
183 
184 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@185&#32;Display&#32;the&#32;rollback&#32;number&#32;from&#32;the&#32;transaction&#32;class*/</emphasis>
185 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis class="stringliteral">&quot;Rollback&#32;counter&#32;is&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;tx-&gt;getTest_counter()&#32;&lt;&lt;&#32;std::endl;
186 
187 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@188&#32;Clean&#32;up&#32;Transaction&#32;Manager&#32;from&#32;all&#32;main&#32;process&#32;associated&#32;transactions&#32;*/</emphasis>
188 &#32;&#32;&#32;&#32;tm.<link linkend="class_t_m_a5e2d1127f2429f2f524d25f430eade06_1a5e2d1127f2429f2f524d25f430eade06">_TX_EXIT</link>();
189 &#32;&#32;&#32;&#32;<emphasis class="comment">/*&#32;@190&#32;Display&#32;all&#32;Transactions&#32;associated&#32;with&#32;the&#32;main&#32;process.&#32;It&#32;should&#32;be&#32;empty&#32;after&#32;_TX_EXIT()&#32;function&#32;call!!!&#32;*/</emphasis>
190 &#32;&#32;&#32;&#32;tm.<link linkend="class_t_m_a1d6891b1d3e71cc0acef54e7afe71c09_1a1d6891b1d3e71cc0acef54e7afe71c09">print_all</link>();
191 
192 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
193 }
    </computeroutput></literallayout>
</section>
