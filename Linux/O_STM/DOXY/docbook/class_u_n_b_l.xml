<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_u_n_b_l">
<title>UNBL class Reference</title>
<para>
    <programlisting>#include <link linkend="_u_n_b_l_8h">&lt;UNBL.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for UNBL</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_u_n_b_l__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for UNBL</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_u_n_b_l__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int accountNumber</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string address</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double balance</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string firstName</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string fullname</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string lastName</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_a14d5e1adc618827667d8d9524abaf31b_1a14d5e1adc618827667d8d9524abaf31b">copy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; to, std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; from)<para><emphasis>copy function, make deep copy of the object/pointer</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="class_u_n_b_l_a44a84fb7fe8778e3048921581049c715_1a44a84fb7fe8778e3048921581049c715">GetAccountNumber</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_n_b_l_a74f8896be6e93ad8f89ca3b0da83525a_1a74f8896be6e93ad8f89ca3b0da83525a">GetAddress</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_u_n_b_l_ad5b882bff8d1e2619b2ebbd170345c99_1ad5b882bff8d1e2619b2ebbd170345c99">GetBalance</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; <link linkend="class_u_n_b_l_a5dfe7f9e5fbb66abff9a73e40e803887_1a5dfe7f9e5fbb66abff9a73e40e803887">getBaseCopy</link> (
std::shared_ptr&lt; <link linkend="class_o_s_t_m">OSTM</link> &gt; object)<para><emphasis>getBaseCopy function, make deep copy of the object/pointer and Return a new std::shared_ptr&lt;BANK&gt; type object</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_n_b_l_ae89215b95f2e11aa70f9c8bbfd55c10c_1ae89215b95f2e11aa70f9c8bbfd55c10c">GetFirstName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_n_b_l_a4292e9cafc42be3d9f4f3d6221bc9638_1a4292e9cafc42be3d9f4f3d6221bc9638">GetFullname</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual std::string <link linkend="class_u_n_b_l_a27f19f2af5e1abd33b5c63f16b493f6c_1a27f19f2af5e1abd33b5c63f16b493f6c">GetLastName</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_u_n_b_l">UNBL</link> <link linkend="class_u_n_b_l_a32ab1105494f18bdb33e651e9bbfcd02_1a32ab1105494f18bdb33e651e9bbfcd02">operator=</link> (
const <link linkend="class_u_n_b_l">UNBL</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_a0ee536d872c0f93486f942b268c2431e_1a0ee536d872c0f93486f942b268c2431e">SetAccountNumber</link> (
int accountNumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_acbd63767c5070d82605671cfce0433a9_1acbd63767c5070d82605671cfce0433a9">SetAddress</link> (
std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_a3b7b2089cf4e2995e99b860b1fb2e5cb_1a3b7b2089cf4e2995e99b860b1fb2e5cb">SetBalance</link> (
double balance)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_aef061d2cba01bcd752e9305dc374cabc_1aef061d2cba01bcd752e9305dc374cabc">SetFirstName</link> (
std::string firstName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_a1b3f52c44756930c1ee4acb06f2634ad_1a1b3f52c44756930c1ee4acb06f2634ad">SetFullname</link> (
std::string fullname)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_abd683db339dffe71af3993a8a5cb5929_1abd683db339dffe71af3993a8a5cb5929">SetLastName</link> (
std::string lastName)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_u_n_b_l_a76d8bba21d64d79d8de63763b8acc1fd_1a76d8bba21d64d79d8de63763b8acc1fd">toString</link> (
)<para><emphasis>_cast, is use to cast bak the std::shared_ptr&lt;OSTM&gt; to the required type</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_n_b_l_aa264ef64c453e6049b3d4c984d84d1de_1aa264ef64c453e6049b3d4c984d84d1de">UNBL</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_n_b_l_a9afc7728e8d9970b63592af018a2afb8_1a9afc7728e8d9970b63592af018a2afb8">UNBL</link> (
int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_n_b_l_abbd578fbd58cf6f2143f17b3011f6c21_1abbd578fbd58cf6f2143f17b3011f6c21">UNBL</link> (
std::shared_ptr&lt; <link linkend="class_b_a_n_k">BANK</link> &gt; obj, int _version, int _unique_id)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_u_n_b_l_aca7a99d7308d5d8dd5841a0eeeed0852_1aca7a99d7308d5d8dd5841a0eeeed0852">UNBL</link> (
const <link linkend="class_u_n_b_l">UNBL</link> &amp; orig)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="class_u_n_b_l_a32d405e6e9adfab1ffdeec6406f9e72f_1a32d405e6e9adfab1ffdeec6406f9e72f">~UNBL</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <simplesect>
            <title>Detailed Description</title>

<para>Inherit from <link linkend="class_b_a_n_k">BANK</link> </para>
                <para>Definition at line 19 of file UNBL.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>UNBL.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_u_n_b_l_a14d5e1adc618827667d8d9524abaf31b_1a14d5e1adc618827667d8d9524abaf31b">
                <title>void UNBL::copy (std::shared_ptr&lt; OSTM &gt; to, std::shared_ptr&lt; OSTM &gt; from)</title> <emphasis>copy function, make deep copy of the object/pointer</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>objTO</entry>
                                <entry>
<para>is a std::shared_ptr&lt;BANK&gt; type object casted back from std::shared_ptr&lt;OSTM&gt; </para>
</entry>
                            </row>
                            <row>
                                <entry>objFROM</entry>
                                <entry>
<para>is a std::shared_ptr&lt;BANK&gt; type object casted back from std::shared_ptr&lt;OSTM&gt; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_u_n_b_l_a44a84fb7fe8778e3048921581049c715_1a44a84fb7fe8778e3048921581049c715">
                <title>int UNBL::GetAccountNumber () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a74f8896be6e93ad8f89ca3b0da83525a_1a74f8896be6e93ad8f89ca3b0da83525a">
                <title>std::string UNBL::GetAddress () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_ad5b882bff8d1e2619b2ebbd170345c99_1ad5b882bff8d1e2619b2ebbd170345c99">
                <title>double UNBL::GetBalance () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a5dfe7f9e5fbb66abff9a73e40e803887_1a5dfe7f9e5fbb66abff9a73e40e803887">
                <title>std::shared_ptr&lt; OSTM &gt; UNBL::getBaseCopy (std::shared_ptr&lt; OSTM &gt; object)</title> <emphasis>getBaseCopy function, make deep copy of the object/pointer and Return a new std::shared_ptr&lt;BANK&gt; type object</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>objTO</entry>
                                <entry>
<para>is a <link linkend="class_b_a_n_k">BANK</link> type pointer for casting </para>
</entry>
                            </row>
                            <row>
                                <entry>obj</entry>
                                <entry>
<para>is a std::shared_ptr&lt;BANK&gt; return type </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_u_n_b_l_ae89215b95f2e11aa70f9c8bbfd55c10c_1ae89215b95f2e11aa70f9c8bbfd55c10c">
                <title>std::string UNBL::GetFirstName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a4292e9cafc42be3d9f4f3d6221bc9638_1a4292e9cafc42be3d9f4f3d6221bc9638">
                <title>std::string UNBL::GetFullname () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a27f19f2af5e1abd33b5c63f16b493f6c_1a27f19f2af5e1abd33b5c63f16b493f6c">
                <title>std::string UNBL::GetLastName () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a32ab1105494f18bdb33e651e9bbfcd02_1a32ab1105494f18bdb33e651e9bbfcd02">
                <title>UNBL UNBL::operator= (const UNBL &amp;orig)</title> <emphasis></emphasis>
                
<para>Operator </para>

            </section>
            <section xml:id="class_u_n_b_l_a0ee536d872c0f93486f942b268c2431e_1a0ee536d872c0f93486f942b268c2431e">
                <title>void UNBL::SetAccountNumber (int accountNumber)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_acbd63767c5070d82605671cfce0433a9_1acbd63767c5070d82605671cfce0433a9">
                <title>void UNBL::SetAddress (std::string address)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a3b7b2089cf4e2995e99b860b1fb2e5cb_1a3b7b2089cf4e2995e99b860b1fb2e5cb">
                <title>void UNBL::SetBalance (double balance)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_aef061d2cba01bcd752e9305dc374cabc_1aef061d2cba01bcd752e9305dc374cabc">
                <title>void UNBL::SetFirstName (std::string firstName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a1b3f52c44756930c1ee4acb06f2634ad_1a1b3f52c44756930c1ee4acb06f2634ad">
                <title>void UNBL::SetFullname (std::string fullname)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_abd683db339dffe71af3993a8a5cb5929_1abd683db339dffe71af3993a8a5cb5929">
                <title>void UNBL::SetLastName (std::string lastName)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_u_n_b_l_a76d8bba21d64d79d8de63763b8acc1fd_1a76d8bba21d64d79d8de63763b8acc1fd">
                <title>void UNBL::toString ()</title> <emphasis>_cast, is use to cast bak the std::shared_ptr&lt;OSTM&gt; to the required type</emphasis>
                
<para>toString function, displays the object values in formatted way </para>

            </section>
            <section xml:id="class_u_n_b_l_aa264ef64c453e6049b3d4c984d84d1de_1aa264ef64c453e6049b3d4c984d84d1de">
                <title>UNBL::UNBL ()</title> <emphasis></emphasis>
                
<para>Constructor </para>

            </section>
            <section xml:id="class_u_n_b_l_a9afc7728e8d9970b63592af018a2afb8_1a9afc7728e8d9970b63592af018a2afb8">
                <title>UNBL::UNBL (int accountNumber, double balance, std::string firstName, std::string lastName, std::string address)</title> <emphasis></emphasis>
                
<para>Custom constructor </para>

            </section>
            <section xml:id="class_u_n_b_l_abbd578fbd58cf6f2143f17b3011f6c21_1abbd578fbd58cf6f2143f17b3011f6c21">
                <title>UNBL::UNBL (std::shared_ptr&lt; BANK &gt; obj, int _version, int _unique_id)</title> <emphasis></emphasis>
                
<para>Custom constructor, used by the library for deep copying </para>

            </section>
            <section xml:id="class_u_n_b_l_aca7a99d7308d5d8dd5841a0eeeed0852_1aca7a99d7308d5d8dd5841a0eeeed0852">
                <title>UNBL::UNBL (const UNBL &amp;orig)</title> <emphasis></emphasis>
                
<para>Copy constructor </para>

            </section>
            <section xml:id="class_u_n_b_l_a32d405e6e9adfab1ffdeec6406f9e72f_1a32d405e6e9adfab1ffdeec6406f9e72f">
                <title>UNBL::~UNBL ()</title> <emphasis></emphasis>
                
<para>de-constructor </para>

            </section>
</section>
