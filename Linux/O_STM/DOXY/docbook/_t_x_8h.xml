<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_t_x_8h">
    <title>TX.h File Reference</title>
    <programlisting>#include &lt;cstdlib&gt;</programlisting>
    <programlisting>#include &lt;utility&gt;</programlisting>
    <programlisting>#include &lt;map&gt;</programlisting>
    <programlisting>#include &lt;iostream&gt;</programlisting>
    <programlisting>#include &lt;mutex&gt;</programlisting>
    <programlisting>#include &lt;unistd.h&gt;</programlisting>
    <programlisting>#include &lt;memory&gt;</programlisting>
    <programlisting>#include &lt;stdio.h&gt;</programlisting>
    <programlisting>#include &lt;thread&gt;</programlisting>
    <programlisting>#include &quot;OSTM.h&quot;</programlisting>
<para>Include dependency diagram for TX.h</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="_t_x_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for TX.h</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="_t_x_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_t_x">TX</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file TX.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">/*&#32;</emphasis>
2 <emphasis class="comment">&#32;*&#32;File:&#32;&#32;&#32;TX.h</emphasis>
3 <emphasis class="comment">&#32;*&#32;Author:&#32;Zoltan&#32;Fuzesi</emphasis>
4 <emphasis class="comment">&#32;*&#32;</emphasis>
5 <emphasis class="comment">&#32;*&#32;Created&#32;on&#32;December&#32;18,&#32;2017,&#32;2:09&#32;PM</emphasis>
6 <emphasis class="comment">&#32;*&#32;Transaction&#32;class&#32;fields&#32;and&#32;methods&#32;declarations</emphasis>
7 <emphasis class="comment">&#32;*/</emphasis>
8 
9 <emphasis class="preprocessor">#ifndef&#32;TX_H</emphasis>
10 <emphasis class="preprocessor">#define&#32;TX_H</emphasis>
11 <emphasis class="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
12 <emphasis class="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
13 <emphasis class="preprocessor">#include&#32;&lt;map&gt;</emphasis>
14 <emphasis class="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
15 <emphasis class="preprocessor">#include&#32;&lt;mutex&gt;</emphasis>
16 <emphasis class="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
17 <emphasis class="comment">//#include&#32;&lt;io.h&gt;</emphasis>
18 <emphasis class="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
19 <emphasis class="comment">//#include&#32;&lt;process.h&gt;</emphasis>
20 <emphasis class="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
21 <emphasis class="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
22 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="_o_s_t_m_8h">OSTM.h</link>&quot;</emphasis>
23 
24 <emphasis class="keyword">class&#32;</emphasis><link linkend="class_t_m">TM</link>;
25 
<link linkend="class_t_x">26 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_t_x">TX</link>&#32;{
27 <emphasis class="keyword">public</emphasis>:
31 &#32;&#32;&#32;&#32;<link linkend="class_t_x_a8a4b83eab0171ae834bfa92bbced1094_1a8a4b83eab0171ae834bfa92bbced1094">TX</link>(std::thread::id&#32;<emphasis class="keywordtype">id</emphasis>);
35 &#32;&#32;&#32;&#32;<link linkend="class_t_x_abecf854cc3228ab6dd51175b3cd1c70a_1abecf854cc3228ab6dd51175b3cd1c70a">~TX</link>();
39 &#32;&#32;&#32;&#32;<link linkend="class_t_x_a8a4b83eab0171ae834bfa92bbced1094_1a8a4b83eab0171ae834bfa92bbced1094">TX</link>(<emphasis class="keyword">const</emphasis>&#32;<link linkend="class_t_x">TX</link>&amp;&#32;orig);
43 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_aa9739c5c2077454c779098db7baefc2b_1aa9739c5c2077454c779098db7baefc2b">ostm_exit</link>();
44 &#32;&#32;&#32;&#32;
48 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_abc32af2f51df97ac483e5bfe7db6ca6e_1abc32af2f51df97ac483e5bfe7db6ca6e">_register</link>(std::shared_ptr&lt;OSTM&gt;&#32;&#32;<emphasis class="keywordtype">object</emphasis>);
52 &#32;&#32;&#32;&#32;std::shared_ptr&lt;OSTM&gt;&#32;&#32;<link linkend="class_t_x_a1d78262b8831ddd042ed491f2e600e24_1a1d78262b8831ddd042ed491f2e600e24">load</link>(std::shared_ptr&lt;OSTM&gt;&#32;&#32;<emphasis class="keywordtype">object</emphasis>);
56 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_a7dbcb369aa4a3370b6c6829d278ece5d_1a7dbcb369aa4a3370b6c6829d278ece5d">store</link>(std::shared_ptr&lt;OSTM&gt;&#32;&#32;<emphasis class="keywordtype">object</emphasis>);
60 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_t_x_a9dde5d356b35e557448e58d260087356_1a9dde5d356b35e557448e58d260087356">commit</link>();
64 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_a1384bdf12d795854b5d32e7f61ffbdb8_1a1384bdf12d795854b5d32e7f61ffbdb8">_increase_tx_nesting</link>();
68 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_aa3ac499f576326588628ade96b27b4b1_1aa3ac499f576326588628ade96b27b4b1">_decrease_tx_nesting</link>();
<link linkend="class_t_x_adf1ccda799ef5c419cb43b8ae55eb45c_1adf1ccda799ef5c419cb43b8ae55eb45c">72 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">friend</emphasis>&#32;<emphasis class="keyword">class&#32;</emphasis><link linkend="class_t_m">TM</link>;
73 &#32;&#32;&#32;&#32;<emphasis class="comment">/*</emphasis>
74 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*&#32;\brief&#32;ONLY&#32;FOR&#32;TESTING!!!&#32;returning&#32;the&#32;number&#32;of&#32;rollback&#32;happened&#32;during&#32;transactions</emphasis>
75 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
76 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="class_t_x_ae9bf97930c4670f59d334b345353a71e_1ae9bf97930c4670f59d334b345353a71e">getTest_counter</link>();
<link linkend="class_t_x_a25838234aab99ae891a90eb8623a8b3c_1a25838234aab99ae891a90eb8623a8b3c">80 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="class_t_x_a25838234aab99ae891a90eb8623a8b3c_1a25838234aab99ae891a90eb8623a8b3c">test_counter</link>;
81 &#32;&#32;&#32;&#32;<emphasis class="comment">/*</emphasis>
82 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*&#32;TESTING&#32;ONLY</emphasis>
83 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
84 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_a3d96ed91eb9ec73e16589f705661c5a7_1a3d96ed91eb9ec73e16589f705661c5a7">_print_all_tx</link>()&#32;;
85 
86 
87 <emphasis class="keyword">private</emphasis>:
<link linkend="class_t_x_a81aafda16e2f20e36ec6c68e584668ff_1a81aafda16e2f20e36ec6c68e584668ff">92 </link>&#32;&#32;&#32;&#32;std::map&lt;&#32;int,&#32;std::shared_ptr&lt;OSTM&gt;&#32;&#32;&gt;&#32;<link linkend="class_t_x_a81aafda16e2f20e36ec6c68e584668ff_1a81aafda16e2f20e36ec6c68e584668ff">working_Map_collection</link>;
<link linkend="class_t_x_a145a1c74b521f277fe481971a930b249_1a145a1c74b521f277fe481971a930b249">98 </link>&#32;&#32;&#32;&#32;std::thread::id&#32;<link linkend="class_t_x_a145a1c74b521f277fe481971a930b249_1a145a1c74b521f277fe481971a930b249">transaction_Number</link>;
<link linkend="class_t_x_ae8f413fd7f4fea322e7ad3c668f9898e_1ae8f413fd7f4fea322e7ad3c668f9898e">102 </link>&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="class_t_x_ae8f413fd7f4fea322e7ad3c668f9898e_1ae8f413fd7f4fea322e7ad3c668f9898e">_tx_nesting_level</link>;
103 &#32;&#32;&#32;&#32;
<link linkend="class_t_x_a1a45d726894190695314464d7cd97c29_1a1a45d726894190695314464d7cd97c29">108 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">static</emphasis>&#32;std::map&lt;int,&#32;std::shared_ptr&lt;OSTM&gt;&#32;&#32;&gt;<link linkend="class_t_x_a1a45d726894190695314464d7cd97c29_1a1a45d726894190695314464d7cd97c29">main_Process_Map_collection</link>;
<link linkend="class_t_x_aea5b8eedcd5059384155576b3979a5f6_1aea5b8eedcd5059384155576b3979a5f6">113 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">static</emphasis>&#32;std::map&lt;int,&#32;std::map&lt;&#32;int,&#32;int&#32;&gt;&gt;&#32;<link linkend="class_t_x_aea5b8eedcd5059384155576b3979a5f6_1aea5b8eedcd5059384155576b3979a5f6">process_map_collection</link>;
114 &#32;&#32;&#32;&#32;<emphasis class="comment">//static&#32;std::map&lt;pid_t,&#32;std::map&lt;&#32;int,&#32;std::pair&lt;ppid,&#32;int&gt;&#32;&#32;&gt;&gt;&#32;process_map_collection;</emphasis>
118 <emphasis class="comment"></emphasis>&#32;&#32;&#32;&#32;std::map&lt;&#32;int&#32;,&#32;int&#32;&gt;&#32;<link linkend="class_t_x_a3f5671423cb7b9f9c98f8a25f2a4b545_1a3f5671423cb7b9f9c98f8a25f2a4b545">get_thread_Map</link>();
<link linkend="class_t_x_aa688a8c96fa3cdf8cd92e267463536dc_1aa688a8c96fa3cdf8cd92e267463536dc">122 </link>&#32;&#32;&#32;&#32;<emphasis class="keyword">static</emphasis>&#32;std::mutex&#32;<link linkend="class_t_x_aa688a8c96fa3cdf8cd92e267463536dc_1aa688a8c96fa3cdf8cd92e267463536dc">register_Lock</link>;
126 &#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;std::thread::id&#32;<link linkend="class_t_x_a9eba04944d449285905b60ec47223cff_1a9eba04944d449285905b60ec47223cff">_get_tx_number</link>()&#32;<emphasis class="keyword">const</emphasis>;
127 &#32;&#32;&#32;
131 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_a4c13d2015dc15d0f788fa9a1413f0463_1a4c13d2015dc15d0f788fa9a1413f0463">_release_object_lock</link>();
135 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_t_x_ae045534c4a9d39bd5c6ea2a39a372a79_1ae045534c4a9d39bd5c6ea2a39a372a79">th_exit</link>();
136 &#32;&#32;&#32;&#32;
137 &#32;&#32;&#32;&#32;
138 
139 };
140 <emphasis class="preprocessor">#endif&#32;//&#32;_TX_H_</emphasis>
    </computeroutput></literallayout>
</section>
